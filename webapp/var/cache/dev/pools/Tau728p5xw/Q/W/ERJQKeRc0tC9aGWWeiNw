<?php //%255BApp%255CEntity%255CContest%255D%255B1%255D

return [PHP_INT_MAX, static function () { return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
    $o = [
        clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\Entity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Entity')),
        clone ($p['Doctrine\\ORM\\Mapping\\Table'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Table')),
        clone ($p['Doctrine\\ORM\\Mapping\\Index'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\Index')),
        clone ($p['Doctrine\\ORM\\Mapping\\UniqueConstraint'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\UniqueConstraint')),
        clone $p['Doctrine\\ORM\\Mapping\\UniqueConstraint'],
        clone ($p['JMS\\Serializer\\Annotation\\VirtualProperty'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\VirtualProperty')),
        clone ($p['JMS\\Serializer\\Annotation\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('JMS\\Serializer\\Annotation\\Type')),
        clone $p['JMS\\Serializer\\Annotation\\VirtualProperty'],
        clone $p['JMS\\Serializer\\Annotation\\Type'],
        clone ($p['Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\HasLifecycleCallbacks')),
        clone ($p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
        clone $p['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'],
    ],
    null,
    [
        'stdClass' => [
            'name' => [
                1 => 'contest',
                'cid',
                'externalid',
                'shortname',
                'formalName',
                'string',
                'penaltyTime',
                'int',
            ],
            'indexes' => [
                1 => [
                    $o[2],
                ],
            ],
            'uniqueConstraints' => [
                1 => [
                    $o[3],
                    $o[4],
                ],
            ],
            'options' => [
                1 => [
                    'collate' => 'utf8mb4_unicode_ci',
                    'charset' => 'utf8mb4',
                    'comment' => 'Contests that will be run with this install',
                ],
                3 => [
                    'lengths' => [
                        '190',
                    ],
                ],
                [
                    'lengths' => [
                        '190',
                    ],
                ],
                [
                    $o[6],
                ],
                7 => [
                    $o[8],
                ],
            ],
            'columns' => [
                2 => [
                    'cid',
                    'enabled',
                ],
                [
                    'externalid',
                ],
                [
                    'shortname',
                ],
            ],
            'exp' => [
                5 => 'object.getName()',
                7 => '0',
            ],
            'fields' => [
                10 => 'shortname',
                'externalid',
            ],
            'groups' => [
                10 => [
                    'Default',
                ],
                [
                    'Default',
                ],
            ],
        ],
    ],
    [
        $o[0],
        $o[1],
        $o[5],
        $o[7],
        $o[9],
        $o[10],
        $o[11],
    ],
    []
); }];
