<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the private 'nelmio_api_doc.describers.config' shared service.

include_once \dirname(__DIR__, 5).'/lib/vendor/nelmio/api-doc-bundle/Describer/DescriberInterface.php';
include_once \dirname(__DIR__, 5).'/lib/vendor/nelmio/api-doc-bundle/Describer/ExternalDocDescriber.php';

return $this->privates['nelmio_api_doc.describers.config'] = new \Nelmio\ApiDocBundle\Describer\ExternalDocDescriber(['info' => ['title' => 'DOMjudge', 'description' => 'DOMjudge API v4', 'version' => '7.3.3'], 'securityDefinitions' => ['BasicAuth' => ['type' => 'basic'], 'consumes' => [0 => 'application/x-www-form-urlencoded'], 'security' => [0 => [], 1 => ['BasicAuth' => []]]], 'definitions' => ['NotFound' => ['description' => 'The specified resource was not found'], 'Unauthorized' => ['description' => 'Unauthorized'], 'ContestProblem' => ['properties' => ['id' => ['type' => 'string'], 'label' => ['type' => 'string'], 'short_name' => ['type' => 'string'], 'name' => ['type' => 'string'], 'ordinal' => ['type' => 'integer'], 'rgb' => ['type' => 'string'], 'color' => ['type' => 'string'], 'time_limit' => ['type' => 'number', 'format' => 'float'], 'test_data_count' => ['type' => 'integer']]], 'Files' => ['properties' => ['files' => ['$ref' => '#/definitions/ArchiveList']]], 'ArchiveList' => ['type' => 'array', 'items' => ['type' => 'object', 'properties' => ['href' => ['type' => 'string']]]], 'SourceCodeList' => ['type' => 'array', 'items' => ['type' => 'object', 'properties' => ['id' => ['type' => 'string'], 'submission_id' => ['type' => 'string'], 'filename' => ['type' => 'string', 'description' => 'Original file name'], 'source' => ['type' => 'string', 'description' => 'Base64-encoded source code']]]], 'JudgementType' => ['type' => 'object', 'properties' => ['id' => ['type' => 'string'], 'name' => ['type' => 'string'], 'penalty' => ['type' => 'boolean'], 'solved' => ['type' => 'boolean']]], 'JudgementExtraFields' => ['properties' => ['judgement_type_id' => ['type' => 'string'], 'judgehost' => ['type' => 'string'], 'max_run_time' => ['type' => 'number', 'format' => 'float']]], 'RunExtraFields' => ['properties' => ['judgement_type_id' => ['type' => 'string']]], 'Scoreboard' => ['type' => 'object', 'properties' => ['event_id' => ['type' => 'string'], 'time' => ['type' => 'string'], 'contest_time' => ['type' => 'string'], 'state' => ['$ref' => '#/definitions/ContestState'], 'rows' => ['type' => 'array', 'items' => ['type' => 'object', 'properties' => ['rank' => ['type' => 'integer'], 'team_id' => ['type' => 'string'], 'score' => ['type' => 'object', 'properties' => ['num_solved' => ['type' => 'integer'], 'total_time' => ['type' => 'integer']]], 'problems' => ['type' => 'array', 'items' => ['type' => 'object', 'properties' => ['label' => ['type' => 'string'], 'problem_id' => ['type' => 'string'], 'num_judged' => ['type' => 'integer'], 'num_pending' => ['type' => 'integer'], 'solved' => ['type' => 'boolean'], 'time' => ['type' => 'integer'], 'first_to_solve' => ['type' => 'boolean']]]]]]]]], 'NextJudging' => ['type' => 'object', 'properties' => ['judgingid' => ['type' => 'integer'], 'submitid' => ['type' => 'integer'], 'cid' => ['type' => 'integer'], 'teamid' => ['type' => 'integer'], 'probid' => ['type' => 'integer'], 'langid' => ['type' => 'string'], 'language_extensions' => ['type' => 'array', 'items' => ['type' => 'string']], 'filter_compiler_files' => ['type' => 'boolean'], 'rejudgingid' => ['type' => 'integer'], 'entry_point' => ['type' => 'string'], 'origsubmitid' => ['type' => 'integer'], 'maxruntime' => ['type' => 'number', 'format' => 'float'], 'memlimit' => ['type' => 'integer'], 'outputlimit' => ['type' => 'integer'], 'run' => ['type' => 'string'], 'compare' => ['type' => 'string'], 'compare_args' => ['type' => 'string'], 'compile_script' => ['type' => 'string'], 'compare_md5sum' => ['type' => 'string'], 'run_md5sum' => ['type' => 'string'], 'compile_script_md5sum' => ['type' => 'string'], 'testcases' => ['type' => 'array', 'items' => ['type' => 'object', 'properties' => ['md5sum_input' => ['type' => 'string'], 'md5sum_output' => ['type' => 'string'], 'testcaseid' => ['type' => 'integer'], 'rank' => ['type' => 'integer']]]]]], 'ContestState' => ['type' => 'object', 'properties' => ['started' => ['type' => 'string', 'format' => 'date-time'], 'ended' => ['type' => 'string', 'format' => 'date-time'], 'frozen' => ['type' => 'string', 'format' => 'date-time'], 'thawed' => ['type' => 'string', 'format' => 'date-time'], 'finalized' => ['type' => 'string', 'format' => 'date-time'], 'end_of_updates' => ['type' => 'string', 'format' => 'date-time']]], 'Award' => ['type' => 'object', 'properties' => ['id' => ['type' => 'string'], 'citation' => ['type' => 'string'], 'team_ids' => ['type' => 'array', 'items' => ['type' => 'string']]]]], 'parameters' => ['cid' => ['name' => 'cid', 'in' => 'path', 'type' => 'string', 'description' => 'The contest ID', 'required' => true], 'id' => ['name' => 'id', 'in' => 'path', 'type' => 'string', 'description' => 'The ID of the entity to get', 'required' => true], 'idlist' => ['name' => 'ids[]', 'in' => 'query', 'type' => 'array', 'description' => 'Filter the objects to get on this list of ID\'s', 'collectionFormat' => 'multi', 'items' => ['type' => 'string', 'description' => 'A single ID']], 'strict' => ['name' => 'strict', 'in' => 'query', 'type' => 'boolean', 'default' => false, 'description' => 'Whether to only include CCS compliant properties in the response']]]);
