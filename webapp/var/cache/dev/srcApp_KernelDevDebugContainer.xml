<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">/domjudge/webapp/src</parameter>
    <parameter key="kernel.project_dir">/domjudge/webapp</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">/domjudge/webapp/var/cache/dev</parameter>
    <parameter key="kernel.logs_dir">/domjudge/webapp/var/log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="DoctrineCacheBundle">Doctrine\Bundle\DoctrineCacheBundle\DoctrineCacheBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="JMSSerializerBundle">JMS\SerializerBundle\JMSSerializerBundle</parameter>
      <parameter key="NelmioApiDocBundle">Nelmio\ApiDocBundle\NelmioApiDocBundle</parameter>
      <parameter key="SensioFrameworkExtraBundle">Sensio\Bundle\FrameworkExtraBundle\SensioFrameworkExtraBundle</parameter>
      <parameter key="MonologBundle">Symfony\Bundle\MonologBundle\MonologBundle</parameter>
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="DebugBundle">Symfony\Bundle\DebugBundle\DebugBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="DoctrineCacheBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/doctrine/doctrine-cache-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineCacheBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/doctrine/doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="JMSSerializerBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/jms/serializer-bundle</parameter>
        <parameter key="namespace">JMS\SerializerBundle</parameter>
      </parameter>
      <parameter key="NelmioApiDocBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/nelmio/api-doc-bundle</parameter>
        <parameter key="namespace">Nelmio\ApiDocBundle</parameter>
      </parameter>
      <parameter key="SensioFrameworkExtraBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/sensio/framework-extra-bundle/src</parameter>
        <parameter key="namespace">Sensio\Bundle\FrameworkExtraBundle</parameter>
      </parameter>
      <parameter key="MonologBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/monolog-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\MonologBundle</parameter>
      </parameter>
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/friendsofsymfony/rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/doctrine/doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/doctrine/doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="DebugBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/debug-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\DebugBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">/domjudge/lib/vendor/symfony/maker-bundle/src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="locale">en</parameter>
    <parameter key="domjudge.version">7.3.3</parameter>
    <parameter key="domjudge.bindir">/domjudge/bin</parameter>
    <parameter key="domjudge.etcdir">/domjudge/etc</parameter>
    <parameter key="domjudge.webappdir">/domjudge/webapp</parameter>
    <parameter key="domjudge.libdir">/domjudge/lib</parameter>
    <parameter key="domjudge.sqldir">/domjudge/sql</parameter>
    <parameter key="domjudge.libvendordir">/domjudge/lib/vendor</parameter>
    <parameter key="domjudge.logdir">/domjudge/output/log</parameter>
    <parameter key="domjudge.rundir">/domjudge/output/run</parameter>
    <parameter key="domjudge.tmpdir">/domjudge/output/tmp</parameter>
    <parameter key="domjudge.baseurl">http://localhost/</parameter>
    <parameter key="domjudge.submitclient_enabled">yes</parameter>
    <parameter key="doctrine_cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine_cache.apcu.class">Doctrine\Common\Cache\ApcuCache</parameter>
    <parameter key="doctrine_cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine_cache.chain.class">Doctrine\Common\Cache\ChainCache</parameter>
    <parameter key="doctrine_cache.couchbase.class">Doctrine\Common\Cache\CouchbaseCache</parameter>
    <parameter key="doctrine_cache.couchbase.connection.class">Couchbase</parameter>
    <parameter key="doctrine_cache.couchbase.hostnames">localhost:8091</parameter>
    <parameter key="doctrine_cache.file_system.class">Doctrine\Common\Cache\FilesystemCache</parameter>
    <parameter key="doctrine_cache.php_file.class">Doctrine\Common\Cache\PhpFileCache</parameter>
    <parameter key="doctrine_cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine_cache.memcache.connection.class">Memcache</parameter>
    <parameter key="doctrine_cache.memcache.host">localhost</parameter>
    <parameter key="doctrine_cache.memcache.port">11211</parameter>
    <parameter key="doctrine_cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine_cache.memcached.connection.class">Memcached</parameter>
    <parameter key="doctrine_cache.memcached.host">localhost</parameter>
    <parameter key="doctrine_cache.memcached.port">11211</parameter>
    <parameter key="doctrine_cache.mongodb.class">Doctrine\Common\Cache\MongoDBCache</parameter>
    <parameter key="doctrine_cache.mongodb.collection.class">MongoCollection</parameter>
    <parameter key="doctrine_cache.mongodb.connection.class">MongoClient</parameter>
    <parameter key="doctrine_cache.mongodb.server">localhost:27017</parameter>
    <parameter key="doctrine_cache.predis.client.class">Predis\Client</parameter>
    <parameter key="doctrine_cache.predis.scheme">tcp</parameter>
    <parameter key="doctrine_cache.predis.host">localhost</parameter>
    <parameter key="doctrine_cache.predis.port">6379</parameter>
    <parameter key="doctrine_cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine_cache.redis.connection.class">Redis</parameter>
    <parameter key="doctrine_cache.redis.host">localhost</parameter>
    <parameter key="doctrine_cache.redis.port">6379</parameter>
    <parameter key="doctrine_cache.riak.class">Doctrine\Common\Cache\RiakCache</parameter>
    <parameter key="doctrine_cache.riak.bucket.class">Riak\Bucket</parameter>
    <parameter key="doctrine_cache.riak.connection.class">Riak\Connection</parameter>
    <parameter key="doctrine_cache.riak.bucket_property_list.class">Riak\BucketPropertyList</parameter>
    <parameter key="doctrine_cache.riak.host">localhost</parameter>
    <parameter key="doctrine_cache.riak.port">8087</parameter>
    <parameter key="doctrine_cache.sqlite3.class">Doctrine\Common\Cache\SQLite3Cache</parameter>
    <parameter key="doctrine_cache.sqlite3.connection.class">SQLite3</parameter>
    <parameter key="doctrine_cache.void.class">Doctrine\Common\Cache\VoidCache</parameter>
    <parameter key="doctrine_cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine_cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine_cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine_cache.security.acl.cache.class">Doctrine\Bundle\DoctrineCacheBundle\Acl\Model\AclCache</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection">
      <parameter key="tinyint" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\TinyIntType</parameter>
      </parameter>
      <parameter key="blobtext" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\BlobTextType</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\JsonType</parameter>
      </parameter>
      <parameter key="binaryjson" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\BinaryJsonType</parameter>
      </parameter>
      <parameter key="internal_error_status" type="collection">
        <parameter key="class">App\Doctrine\DBAL\Types\InternalErrorStatusType</parameter>
      </parameter>
    </parameter>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">/domjudge/webapp/var/cache/dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="nelmio_api_doc.areas" type="collection">
      <parameter>default</parameter>
    </parameter>
    <parameter key="monolog.use_microseconds">true</parameter>
    <parameter key="monolog.swift_mailer.handlers" type="collection"/>
    <parameter key="monolog.handlers_to_channels" type="collection">
      <parameter key="monolog.handler.console" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
          <parameter>doctrine</parameter>
          <parameter>console</parameter>
          <parameter>request</parameter>
        </parameter>
      </parameter>
      <parameter key="monolog.handler.main" type="collection">
        <parameter key="type">exclusive</parameter>
        <parameter key="elements" type="collection">
          <parameter>event</parameter>
        </parameter>
      </parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template">null</parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">/domjudge/webapp/var/cache/dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.prefix"></parameter>
    <parameter key="validator.mapping.cache.file">/domjudge/webapp/var/cache/dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:/domjudge/webapp/var/cache/dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">/domjudge/webapp/var/cache/dev/srcApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="twig.exception_listener.controller">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>form_div_layout.html.twig</parameter>
      <parameter>form_theme.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">/domjudge/webapp/templates</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection">
      <parameter key="ROLE_JURY" type="collection">
        <parameter>ROLE_API</parameter>
        <parameter>ROLE_API_READER</parameter>
        <parameter>ROLE_API_SOURCE_READER</parameter>
      </parameter>
      <parameter key="ROLE_ADMIN" type="collection">
        <parameter>ROLE_JURY</parameter>
        <parameter>ROLE_JUDGEHOST</parameter>
        <parameter>ROLE_API_WRITER</parameter>
      </parameter>
      <parameter key="ROLE_SUPER_ADMIN" type="collection">
        <parameter>ROLE_ADMIN</parameter>
        <parameter>ROLE_ALLOWED_TO_SWITCH</parameter>
      </parameter>
    </parameter>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="doctrine_migrations.dir_name">/domjudge/webapp/src/Migrations</parameter>
    <parameter key="doctrine_migrations.namespace">DoctrineMigrations</parameter>
    <parameter key="doctrine_migrations.table_name">migration_versions</parameter>
    <parameter key="doctrine_migrations.column_name">version</parameter>
    <parameter key="doctrine_migrations.column_length">14</parameter>
    <parameter key="doctrine_migrations.executed_at_column_name">executed_at</parameter>
    <parameter key="doctrine_migrations.all_or_nothing">false</parameter>
    <parameter key="doctrine_migrations.name">Application Migrations</parameter>
    <parameter key="doctrine_migrations.custom_template">null</parameter>
    <parameter key="doctrine_migrations.organize_migrations">false</parameter>
    <parameter key="env(VAR_DUMPER_SERVER)">127.0.0.1:9912</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.http_client" type="collection">
        <parameter>http_client</parameter>
        <parameter>@WebProfiler/Collector/http_client.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.dump" type="collection">
        <parameter>dump</parameter>
        <parameter>@Debug/Profiler/dump.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection">
      <parameter>console.command.public_alias.App\Command\CheckDatabaseConfigurationDefaultValuesCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ImportEventFeedCommand</parameter>
      <parameter>console.command.public_alias.App\Command\LoadExampleDataCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ResetUserPasswordCommand</parameter>
      <parameter>console.command.public_alias.App\Command\ScoreboardMergeCommand</parameter>
      <parameter>console.command.public_alias.doctrine_cache.contains_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.delete_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.flush_command</parameter>
      <parameter>console.command.public_alias.doctrine_cache.stats_command</parameter>
    </parameter>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
    </service>
    <service id="App\ApiDescriber\ParameterRefMergeDescriber" class="App\ApiDescriber\ParameterRefMergeDescriber" autowire="true" autoconfigure="true">
      <tag name="nelmio_api_doc.describer" priority="-999"/>
      <tag name="nelmio_api_doc.describer.default" priority="-999"/>
    </service>
    <service id="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="monolog.logger"/>
      <argument>true</argument>
      <argument>7.3.3</argument>
    </service>
    <service id="App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
    </service>
    <service id="App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" autoconfigure="true">
      <tag name="console.command"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="twig"/>
      <argument type="service" id=".debug.http_client"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="router.default"/>
      <argument>/domjudge/webapp</argument>
    </service>
    <service id="App\Config\Loader\YamlConfigLoader" class="App\Config\Loader\YamlConfigLoader" autowire="true" autoconfigure="true"/>
    <service id="App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\AwardsController"/>
      </call>
    </service>
    <service id="App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\BalloonController"/>
      </call>
    </service>
    <service id="App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\API\ContestController" class="App\Controller\API\ContestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\ContestController"/>
      </call>
    </service>
    <service id="App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\ExecutableController"/>
      </call>
    </service>
    <service id="App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\CheckConfigService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\GeneralInfoController"/>
      </call>
    </service>
    <service id="App\Controller\API\GroupController" class="App\Controller\API\GroupController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\GroupController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\BalloonService"/>
      <argument type="service" id="App\Service\RejudgingService"/>
      <argument type="service" id="monolog.logger"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\JudgehostController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\JudgementController"/>
      </call>
    </service>
    <service id="App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\JudgementTypeController"/>
      </call>
    </service>
    <service id="App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\LanguageController"/>
      </call>
    </service>
    <service id="App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\OrganizationController"/>
      </call>
    </service>
    <service id="App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\API\RunController" class="App\Controller\API\RunController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\RunController"/>
      </call>
    </service>
    <service id="App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\SubmissionController"/>
      </call>
    </service>
    <service id="App\Controller\API\TeamController" class="App\Controller\API\TeamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\TeamController"/>
      </call>
    </service>
    <service id="App\Controller\API\TestcaseController" class="App\Controller\API\TestcaseController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\TestcaseController"/>
      </call>
    </service>
    <service id="App\Controller\API\UserController" class="App\Controller\API\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.qEc7vUD.App\Controller\API\UserController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\AnalysisController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\AuditLogController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\BalloonController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\CheckConfigService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ConfigController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ContestController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ExecutableController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\BaylorCmsService"/>
      <argument type="service" id="App\Service\ImportExportService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument>7.3.3</argument>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ImportExportController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\InternalErrorController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\JudgehostController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\JudgehostRestrictionController" class="App\Controller\Jury\JudgehostRestrictionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="kernel"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\JudgehostRestrictionController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\JuryMiscController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\LanguageController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\PrintController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\ImportProblemService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\RejudgingService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="session"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\RejudgingController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="session"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\ShadowDifferencesController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="router.default"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\SubmissionController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.KTdd2i_.App\Controller\Jury\TeamAffiliationController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\TeamCategoryController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\TeamController"/>
      </call>
    </service>
    <service id="App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="security.token_storage"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Jury\UserController"/>
      </call>
    </service>
    <service id="App\Controller\PublicController" class="App\Controller\PublicController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\PublicController"/>
      </call>
    </service>
    <service id="App\Controller\RootController" class="App\Controller\RootController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\RootController"/>
      </call>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="form.factory"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Team\ClarificationController"/>
      </call>
    </service>
    <service id="App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Team\MiscController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Team\ProblemController"/>
      </call>
    </service>
    <service id="App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Team\ScoreboardController"/>
      </call>
    </service>
    <service id="App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="form.factory"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.rsQA3TH.App\Controller\Team\SubmissionController"/>
      </call>
    </service>
    <service id="App\DataFixtures\ClarificationFixture" class="App\DataFixtures\ClarificationFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ContestFixture" class="App\DataFixtures\ContestFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ContestProblemFixture" class="App\DataFixtures\ContestProblemFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ExecutableFixture" class="App\DataFixtures\ExecutableFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument>/domjudge/sql</argument>
    </service>
    <service id="App\DataFixtures\JudgehostFixture" class="App\DataFixtures\JudgehostFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\ProblemFixture" class="App\DataFixtures\ProblemFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument>/domjudge/webapp</argument>
    </service>
    <service id="App\DataFixtures\TeamAffiliationFixture" class="App\DataFixtures\TeamAffiliationFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\TeamCategoryFixture" class="App\DataFixtures\TeamCategoryFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\TeamFixture" class="App\DataFixtures\TeamFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\TestcaseFixture" class="App\DataFixtures\TestcaseFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\DataFixtures\UserFixture" class="App\DataFixtures\UserFixture" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
    </service>
    <service id="App\Doctrine\DBAL\Types\BinaryJsonType" class="App\Doctrine\DBAL\Types\BinaryJsonType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\BlobTextType" class="App\Doctrine\DBAL\Types\BlobTextType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\InternalErrorStatusType" class="App\Doctrine\DBAL\Types\InternalErrorStatusType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\JsonType" class="App\Doctrine\DBAL\Types\JsonType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\DBAL\Types\TinyIntType" class="App\Doctrine\DBAL\Types\TinyIntType" autowire="true" autoconfigure="true"/>
    <service id="App\Doctrine\HashPasswordSubscriber" class="App\Doctrine\HashPasswordSubscriber" autowire="true" autoconfigure="true">
      <tag name="doctrine.event_subscriber" connection="default"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Doctrine\ORM\Query\AST\Functions\TruncateFunction" class="App\Doctrine\ORM\Query\AST\Functions\TruncateFunction" autowire="true" autoconfigure="true"/>
    <service id="App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="profiler"/>
    </service>
    <service id="App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\BaylorCmsType" class="App\Form\Type\BaylorCmsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JudgehostRestrictionType" class="App\Form\Type\JudgehostRestrictionType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\MinimalUserType" class="App\Form\Type\MinimalUserType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Form\Type\ProblemUploadMultipleType" class="App\Form\Type\ProblemUploadMultipleType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\FosRestBundle\ExceptionController" class="App\FosRestBundle\ExceptionController" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\ContestProblemWrapper" class="App\Helpers\ContestProblemWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\JudgingRunWrapper" class="App\Helpers\JudgingRunWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\JudgingWrapper" class="App\Helpers\JudgingWrapper" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\OrdinalArray" class="App\Helpers\OrdinalArray" autowire="true" autoconfigure="true"/>
    <service id="App\Helpers\OrdinalItem" class="App\Helpers\OrdinalItem" autowire="true" autoconfigure="true"/>
    <service id="App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" autoconfigure="true">
      <tag name="monolog.processor"/>
    </service>
    <service id="App\Security\DOMJudgeBasicAuthenticator" class="App\Security\DOMJudgeBasicAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Security\DOMJudgeIPAuthenticator" class="App\Security\DOMJudgeIPAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.helper"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="App\Security\DOMJudgeXHeadersAuthenticator" class="App\Security\DOMJudgeXHeadersAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="security.helper"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="App\Security\UserChecker" class="App\Security\UserChecker" autowire="true" autoconfigure="true"/>
    <service id="App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Security\UsernamePasswordFormAuthenticationListener" class="App\Security\UsernamePasswordFormAuthenticationListener" autowire="true" autoconfigure="true"/>
    <service id="App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
    </service>
    <service id="App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" autoconfigure="true">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="App\Service\BalloonService" class="App\Service\BalloonService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Service\BaylorCmsService" class="App\Service\BaylorCmsService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>7.3.3</argument>
    </service>
    <service id="App\Service\CheckConfigService" class="App\Service\CheckConfigService" autowire="true" autoconfigure="true">
      <argument>true</argument>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Service\ConfigurationService" class="App\Service\ConfigurationService" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="config_cache_factory"/>
      <argument>true</argument>
      <argument>/domjudge/webapp/var/cache/dev</argument>
      <argument>/domjudge/etc</argument>
    </service>
    <service id="App\Service\DOMJudgeService" class="App\Service\DOMJudgeService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="parameter_bag"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
    </service>
    <service id="App\Service\EventLogService" class="App\Service\EventLogService" autowire="true" autoconfigure="true">
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="App\Service\ImportExportService" class="App\Service\ImportExportService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Service\ImportProblemService" class="App\Service\ImportProblemService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="App\Service\RejudgingService" class="App\Service\RejudgingService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\BalloonService"/>
    </service>
    <service id="App\Service\ScoreboardService" class="App\Service\ScoreboardService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\EventLogService"/>
    </service>
    <service id="App\Service\SubmissionService" class="App\Service\SubmissionService" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="monolog.logger"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="App\Service\ScoreboardService"/>
    </service>
    <service id="App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" autoconfigure="true">
      <tag name="twig.extension"/>
      <argument type="service" id="App\Service\DOMJudgeService"/>
      <argument type="service" id="App\Service\ConfigurationService"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="App\Service\SubmissionService"/>
      <argument type="service" id="App\Service\EventLogService"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument>/domjudge/webapp</argument>
    </service>
    <service id="App\Utils\FreezeData" class="App\Utils\FreezeData" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Filter" class="App\Utils\Scoreboard\Filter" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\ProblemSummary" class="App\Utils\Scoreboard\ProblemSummary" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Scoreboard" class="App\Utils\Scoreboard\Scoreboard" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\ScoreboardMatrixItem" class="App\Utils\Scoreboard\ScoreboardMatrixItem" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\SingleTeamScoreboard" class="App\Utils\Scoreboard\SingleTeamScoreboard" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\Summary" class="App\Utils\Scoreboard\Summary" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Scoreboard\TeamScore" class="App\Utils\Scoreboard\TeamScore" autowire="true" autoconfigure="true"/>
    <service id="App\Utils\Utils" class="App\Utils\Utils" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\Country" class="App\Validator\Constraints\Country" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="App\Validator\Constraints\Identifier" class="App\Validator\Constraints\Identifier" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="App\Validator\Constraints\TimeString" class="App\Validator\Constraints\TimeString" autowire="true" autoconfigure="true"/>
    <service id="App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" autoconfigure="true">
      <tag name="validator.constraint_validator"/>
    </service>
    <service id="fos_rest.exception.controller" class="App\FosRestBundle\ExceptionController" public="true" autowire="true" autoconfigure="true">
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
    </service>
    <service id="doctrine_cache.abstract.apc" class="Doctrine\Common\Cache\ApcCache" abstract="true"/>
    <service id="doctrine_cache.abstract.apcu" class="Doctrine\Common\Cache\ApcuCache" abstract="true"/>
    <service id="doctrine_cache.abstract.array" class="Doctrine\Common\Cache\ArrayCache" abstract="true"/>
    <service id="doctrine_cache.abstract.chain" class="Doctrine\Common\Cache\ChainCache" abstract="true"/>
    <service id="doctrine_cache.abstract.couchbase" class="Doctrine\Common\Cache\CouchbaseCache" abstract="true"/>
    <service id="doctrine_cache.abstract.file_system" class="Doctrine\Common\Cache\FilesystemCache" abstract="true"/>
    <service id="doctrine_cache.abstract.php_file" class="Doctrine\Common\Cache\PhpFileCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcache" class="Doctrine\Common\Cache\MemcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.memcached" class="Doctrine\Common\Cache\MemcachedCache" abstract="true"/>
    <service id="doctrine_cache.abstract.mongodb" class="Doctrine\Common\Cache\MongoDBCache" abstract="true"/>
    <service id="doctrine_cache.abstract.redis" class="Doctrine\Common\Cache\RedisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.predis" class="Doctrine\Common\Cache\PredisCache" abstract="true"/>
    <service id="doctrine_cache.abstract.riak" class="Doctrine\Common\Cache\RiakCache" abstract="true"/>
    <service id="doctrine_cache.abstract.sqlite3" class="Doctrine\Common\Cache\SQLite3Cache" abstract="true"/>
    <service id="doctrine_cache.abstract.void" class="Doctrine\Common\Cache\VoidCache" abstract="true"/>
    <service id="doctrine_cache.abstract.wincache" class="Doctrine\Common\Cache\WinCacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.xcache" class="Doctrine\Common\Cache\XcacheCache" abstract="true"/>
    <service id="doctrine_cache.abstract.zenddata" class="Doctrine\Common\Cache\ZendDataCache" abstract="true"/>
    <service id="doctrine_cache.contains_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\ContainsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.delete_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\DeleteCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.flush_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\FlushCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine_cache.stats_command" class="Doctrine\Bundle\DoctrineCacheBundle\Command\StatsCommand">
      <tag name="console.command"/>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain" public="false" abstract="true">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="monolog.logger.doctrine" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument>%doctrine.dbal.connection_factory.types%</argument>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain" public="false">
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger"/>
      </call>
      <call method="addLogger">
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.bpvU51K"/>
      <call method="addEventSubscriber">
        <argument type="service" id="App\Doctrine\HashPasswordSubscriber"/>
      </call>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="driver">pdo_mysql</argument>
        <argument key="charset">utf8mb4</argument>
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="serverVersion" type="string">5.7</argument>
        <argument key="defaultTableOptions" type="collection">
          <argument key="charset">utf8mb4</argument>
          <argument key="collate">utf8mb4_unicode_ci</argument>
        </argument>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection">
        <argument key="enum">string</argument>
      </argument>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id=".1_ServiceLocator~aINiVZQ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.I3K77mT"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>/domjudge/webapp/var/cache/dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
      <call method="addCustomStringFunction">
        <argument>truncate</argument>
        <argument>App\Doctrine\ORM\Query\AST\Functions\TruncateFunction</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>/domjudge/webapp/src/Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="jms_serializer.event_dispatcher" class="JMS\Serializer\EventDispatcher\LazyEventDispatcher" public="false">
      <argument type="service" id=".service_locator.OtWgGj5"/>
      <call method="setListeners">
        <argument type="collection">
          <argument key="serializer.post_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>App\Serializer\ContestProblemVisitor</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>App\Entity\ContestProblem</argument>
              <argument>json</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>App\Serializer\ContestVisitor</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>App\Entity\Contest</argument>
              <argument>json</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>App\Serializer\SetExternalIdVisitor</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>json</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>App\Serializer\SubmissionVisitor</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>App\Entity\Submission</argument>
              <argument>json</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPostSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
          </argument>
          <argument key="serializer.pre_serialize" type="collection">
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.stopwatch_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>null</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerializeTypedProxy</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ORM\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\MongoDB\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\ODM\PHPCR\PersistentCollection</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>Doctrine\Common\Persistence\Proxy</argument>
            </argument>
            <argument type="collection">
              <argument type="collection">
                <argument>jms_serializer.doctrine_proxy_subscriber</argument>
                <argument>onPreSerialize</argument>
              </argument>
              <argument>null</argument>
              <argument>null</argument>
              <argument>ProxyManager\Proxy\LazyLoadingInterface</argument>
            </argument>
          </argument>
        </argument>
      </call>
    </service>
    <service id="jms_serializer.doctrine_proxy_subscriber" class="JMS\Serializer\EventDispatcher\Subscriber\DoctrineProxySubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument>true</argument>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.stopwatch_subscriber" class="JMS\SerializerBundle\Serializer\StopwatchEventSubscriber" public="false">
      <tag name="jms_serializer.event_subscriber"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="jms_serializer.handler_registry" class="JMS\Serializer\Handler\LazyHandlerRegistry">
      <argument type="service" id=".service_locator.91HGn7z"/>
      <argument type="collection">
        <argument key="1" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>serializeCollection</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolationList" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeListTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Validator\ConstraintViolation" type="collection">
            <argument key="xml" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>jms_serializer.constraint_violation_handler</argument>
              <argument>serializeViolationTojson</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTime</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateTimeImmutable</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>serializeDateInterval</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>serializeIterable</argument>
            </argument>
          </argument>
          <argument key="Error" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeErrorToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeErrorToXml</argument>
            </argument>
          </argument>
          <argument key="Exception" type="collection">
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToJson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.exception_normalizer.jms</argument>
              <argument>serializeToXml</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\Form" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormTojson</argument>
            </argument>
          </argument>
          <argument key="Symfony\Component\Form\FormError" type="collection">
            <argument key="xml" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorToxml</argument>
            </argument>
            <argument key="json" type="collection">
              <argument>fos_rest.serializer.form_error_handler</argument>
              <argument>serializeFormErrorTojson</argument>
            </argument>
          </argument>
        </argument>
        <argument key="2" type="collection">
          <argument key="ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\Common\Collections\ArrayCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ORM\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\MongoDB\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="Doctrine\ODM\PHPCR\PersistentCollection" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
            <argument key="yml" type="collection">
              <argument>jms_serializer.array_collection_handler</argument>
              <argument>deserializeCollection</argument>
            </argument>
          </argument>
          <argument key="DateTime" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeFromxml</argument>
            </argument>
          </argument>
          <argument key="DateTimeImmutable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateTimeImmutableFromxml</argument>
            </argument>
          </argument>
          <argument key="DateInterval" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromjson</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.datetime_handler</argument>
              <argument>deserializeDateIntervalFromxml</argument>
            </argument>
          </argument>
          <argument key="JMS\Serializer\Handler\iterable" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterable</argument>
            </argument>
          </argument>
          <argument key="Iterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="ArrayIterator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeIterator</argument>
            </argument>
          </argument>
          <argument key="Generator" type="collection">
            <argument key="json" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
            <argument key="xml" type="collection">
              <argument>jms_serializer.iterator_handler</argument>
              <argument>deserializeGenerator</argument>
            </argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="jms_serializer.array_collection_handler" class="JMS\Serializer\Handler\ArrayCollectionHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>false</argument>
    </service>
    <service id="jms_serializer.constraint_violation_handler" class="JMS\Serializer\Handler\ConstraintViolationHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.datetime_handler" class="JMS\Serializer\Handler\DateHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument>Y-m-d\TH:i:sP</argument>
      <argument>Europe/Amsterdam</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.iterator_handler" class="JMS\Serializer\Handler\IteratorHandler" public="false">
      <tag name="jms_serializer.subscribing_handler"/>
    </service>
    <service id="jms_serializer.type_parser" class="JMS\Serializer\Type\Parser" public="false"/>
    <service id="jms_serializer.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="jms_serializer.metadata.yaml_driver" class="JMS\Serializer\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.xml_driver" class="JMS\Serializer\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.file_locator"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.annotation_driver" class="JMS\Serializer\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="jms_serializer.serialized_name_annotation_strategy"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.metadata.chain_driver" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="jms_serializer.metadata.yaml_driver"/>
        <argument type="service" id="jms_serializer.metadata.xml_driver"/>
        <argument type="service" id="jms_serializer.metadata.annotation_driver"/>
      </argument>
    </service>
    <service id="jms_serializer.metadata.doctrine_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrineTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="jms_serializer.metadata.doctrine_phpcr_type_driver" class="JMS\Serializer\Metadata\Driver\DoctrinePHPCRTypeDriver" public="false">
      <argument type="service" id="jms_serializer.metadata.chain_driver"/>
      <argument type="service" id="doctrine_phpcr"/>
    </service>
    <service id="jms_serializer.metadata.lazy_loading_driver" class="Metadata\Driver\LazyLoadingDriver" public="false">
      <argument type="service" id="service_container"/>
      <argument>jms_serializer.metadata_driver</argument>
    </service>
    <service id="jms_serializer.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>/domjudge/webapp/var/cache/dev/jms_serializer</argument>
    </service>
    <service id="jms_serializer.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="jms_serializer.metadata.lazy_loading_driver"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="jms_serializer.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="jms_serializer.version_exclusion_strategy" class="JMS\Serializer\Exclusion\VersionExclusionStrategy" public="false" abstract="true"/>
    <service id="jms_serializer.camel_case_naming_strategy" class="JMS\Serializer\Naming\CamelCaseNamingStrategy" public="false">
      <argument>_</argument>
      <argument>true</argument>
    </service>
    <service id="jms_serializer.identical_property_naming_strategy" class="JMS\Serializer\Naming\IdenticalPropertyNamingStrategy" public="false"/>
    <service id="jms_serializer.serialized_name_annotation_strategy" class="JMS\Serializer\Naming\SerializedNameAnnotationStrategy" public="false">
      <argument type="service" id="jms_serializer.camel_case_naming_strategy"/>
    </service>
    <service id="jms_serializer.doctrine_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="string">null</argument>
    </service>
    <service id="jms_serializer.doctrine_phpcr_object_constructor" class="JMS\Serializer\Construction\DoctrineObjectConstructor" public="false">
      <argument type="service" id="doctrine_phpcr"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
    </service>
    <service id="jms_serializer.unserialize_object_constructor" class="JMS\Serializer\Construction\UnserializeObjectConstructor" public="false"/>
    <service id="jms_serializer.serializer" class="JMS\Serializer\Serializer" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="collection">
        <argument key="2" type="service" id="jms_serializer.deserialization_graph_navigator_factory"/>
        <argument key="1" type="service" id="jms_serializer.serialization_graph_navigator_factory"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_serialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_serialization_visitor"/>
      </argument>
      <argument type="collection">
        <argument key="json" type="service" id="jms_serializer.json_deserialization_visitor"/>
        <argument key="xml" type="service" id="jms_serializer.xml_deserialization_visitor"/>
      </argument>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
      <argument type="service" id="jms_serializer.type_parser" on-invalid="null"/>
    </service>
    <service id="jms_serializer.deserialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\DeserializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.unserialize_object_constructor"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.serialization_graph_navigator_factory" class="JMS\Serializer\GraphNavigator\Factory\SerializationGraphNavigatorFactory" public="false">
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument type="service" id="jms_serializer.handler_registry"/>
      <argument type="service" id="jms_serializer.accessor_strategy.default"/>
      <argument type="service" id="jms_serializer.event_dispatcher"/>
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.expression_evaluator" class="JMS\Serializer\Expression\ExpressionEvaluator">
      <argument type="service" id="jms_serializer.expression_language"/>
      <argument type="collection">
        <argument key="container" type="service" id="service_container"/>
      </argument>
    </service>
    <service id="jms_serializer.expression_language" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage" public="false">
      <call method="registerProvider">
        <argument type="service" id="jms_serializer.expression_language.function_provider"/>
      </call>
    </service>
    <service id="jms_serializer.expression_language.function_provider" class="JMS\SerializerBundle\ExpressionLanguage\BasicSerializerFunctionsProvider" public="false">
      <tag name="jms.expression.function_provider"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer" class="JMS\Serializer\Twig\SerializerRuntimeExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="jms_serializer.twig_extension.serializer_runtime_helper" class="JMS\Serializer\Twig\SerializerRuntimeHelper" public="true">
      <tag name="twig.runtime"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.templating.helper.serializer" class="JMS\SerializerBundle\Templating\SerializerHelper">
      <tag name="templating.helper" alias="jms_serializer"/>
      <argument type="service" id="jms_serializer.serializer"/>
    </service>
    <service id="jms_serializer.accessor_strategy.default" class="JMS\Serializer\Accessor\DefaultAccessorStrategy" public="false">
      <argument type="service" id="jms_serializer.expression_evaluator"/>
    </service>
    <service id="jms_serializer.json_serialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>1088</argument>
      </call>
    </service>
    <service id="jms_serializer.json_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\JsonDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="json"/>
      <call method="setOptions">
        <argument>0</argument>
      </call>
    </service>
    <service id="jms_serializer.xml_serialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlSerializationVisitorFactory" public="false">
      <tag name="jms_serializer.serialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.xml_deserialization_visitor" class="JMS\Serializer\Visitor\Factory\XmlDeserializationVisitorFactory" public="false">
      <tag name="jms_serializer.deserialization_visitor" format="xml"/>
    </service>
    <service id="jms_serializer.configured_serialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="jms_serializer.configured_deserialization_context_factory" class="JMS\SerializerBundle\ContextFactory\ConfiguredContextFactory" public="false"/>
    <service id="nelmio_api_doc.controller.swagger_ui" class="Nelmio\ApiDocBundle\Controller\SwaggerUiController" public="true">
      <argument type="service" id="nelmio_api_doc.generator_locator"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="nelmio_api_doc.controller.swagger" class="Nelmio\ApiDocBundle\Controller\DocumentationController" public="true">
      <argument type="service" id="nelmio_api_doc.generator_locator"/>
    </service>
    <service id="nelmio_api_doc.controller_reflector" class="Nelmio\ApiDocBundle\Util\ControllerReflector" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="nelmio_api_doc.describers.config" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber" public="false">
      <tag name="nelmio_api_doc.describer" priority="1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="1000"/>
      <argument type="collection">
        <argument key="info" type="collection">
          <argument key="title">DOMjudge</argument>
          <argument key="description">DOMjudge API v4</argument>
          <argument key="version">7.3.3</argument>
        </argument>
        <argument key="securityDefinitions" type="collection">
          <argument key="BasicAuth" type="collection">
            <argument key="type">basic</argument>
          </argument>
          <argument key="consumes" type="collection">
            <argument>application/x-www-form-urlencoded</argument>
          </argument>
          <argument key="security" type="collection">
            <argument type="collection"/>
            <argument type="collection">
              <argument key="BasicAuth" type="collection"/>
            </argument>
          </argument>
        </argument>
        <argument key="definitions" type="collection">
          <argument key="NotFound" type="collection">
            <argument key="description">The specified resource was not found</argument>
          </argument>
          <argument key="Unauthorized" type="collection">
            <argument key="description">Unauthorized</argument>
          </argument>
          <argument key="ContestProblem" type="collection">
            <argument key="properties" type="collection">
              <argument key="id" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="label" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="short_name" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="name" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="ordinal" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="rgb" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="color" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="time_limit" type="collection">
                <argument key="type">number</argument>
                <argument key="format">float</argument>
              </argument>
              <argument key="test_data_count" type="collection">
                <argument key="type">integer</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Files" type="collection">
            <argument key="properties" type="collection">
              <argument key="files" type="collection">
                <argument key="$ref">#/definitions/ArchiveList</argument>
              </argument>
            </argument>
          </argument>
          <argument key="ArchiveList" type="collection">
            <argument key="type">array</argument>
            <argument key="items" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="href" type="collection">
                  <argument key="type">string</argument>
                </argument>
              </argument>
            </argument>
          </argument>
          <argument key="SourceCodeList" type="collection">
            <argument key="type">array</argument>
            <argument key="items" type="collection">
              <argument key="type">object</argument>
              <argument key="properties" type="collection">
                <argument key="id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="submission_id" type="collection">
                  <argument key="type">string</argument>
                </argument>
                <argument key="filename" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">Original file name</argument>
                </argument>
                <argument key="source" type="collection">
                  <argument key="type">string</argument>
                  <argument key="description">Base64-encoded source code</argument>
                </argument>
              </argument>
            </argument>
          </argument>
          <argument key="JudgementType" type="collection">
            <argument key="type">object</argument>
            <argument key="properties" type="collection">
              <argument key="id" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="name" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="penalty" type="collection">
                <argument key="type">boolean</argument>
              </argument>
              <argument key="solved" type="collection">
                <argument key="type">boolean</argument>
              </argument>
            </argument>
          </argument>
          <argument key="JudgementExtraFields" type="collection">
            <argument key="properties" type="collection">
              <argument key="judgement_type_id" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="judgehost" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="max_run_time" type="collection">
                <argument key="type">number</argument>
                <argument key="format">float</argument>
              </argument>
            </argument>
          </argument>
          <argument key="RunExtraFields" type="collection">
            <argument key="properties" type="collection">
              <argument key="judgement_type_id" type="collection">
                <argument key="type">string</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Scoreboard" type="collection">
            <argument key="type">object</argument>
            <argument key="properties" type="collection">
              <argument key="event_id" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="time" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="contest_time" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="state" type="collection">
                <argument key="$ref">#/definitions/ContestState</argument>
              </argument>
              <argument key="rows" type="collection">
                <argument key="type">array</argument>
                <argument key="items" type="collection">
                  <argument key="type">object</argument>
                  <argument key="properties" type="collection">
                    <argument key="rank" type="collection">
                      <argument key="type">integer</argument>
                    </argument>
                    <argument key="team_id" type="collection">
                      <argument key="type">string</argument>
                    </argument>
                    <argument key="score" type="collection">
                      <argument key="type">object</argument>
                      <argument key="properties" type="collection">
                        <argument key="num_solved" type="collection">
                          <argument key="type">integer</argument>
                        </argument>
                        <argument key="total_time" type="collection">
                          <argument key="type">integer</argument>
                        </argument>
                      </argument>
                    </argument>
                    <argument key="problems" type="collection">
                      <argument key="type">array</argument>
                      <argument key="items" type="collection">
                        <argument key="type">object</argument>
                        <argument key="properties" type="collection">
                          <argument key="label" type="collection">
                            <argument key="type">string</argument>
                          </argument>
                          <argument key="problem_id" type="collection">
                            <argument key="type">string</argument>
                          </argument>
                          <argument key="num_judged" type="collection">
                            <argument key="type">integer</argument>
                          </argument>
                          <argument key="num_pending" type="collection">
                            <argument key="type">integer</argument>
                          </argument>
                          <argument key="solved" type="collection">
                            <argument key="type">boolean</argument>
                          </argument>
                          <argument key="time" type="collection">
                            <argument key="type">integer</argument>
                          </argument>
                          <argument key="first_to_solve" type="collection">
                            <argument key="type">boolean</argument>
                          </argument>
                        </argument>
                      </argument>
                    </argument>
                  </argument>
                </argument>
              </argument>
            </argument>
          </argument>
          <argument key="NextJudging" type="collection">
            <argument key="type">object</argument>
            <argument key="properties" type="collection">
              <argument key="judgingid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="submitid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="cid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="teamid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="probid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="langid" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="language_extensions" type="collection">
                <argument key="type">array</argument>
                <argument key="items" type="collection">
                  <argument key="type">string</argument>
                </argument>
              </argument>
              <argument key="filter_compiler_files" type="collection">
                <argument key="type">boolean</argument>
              </argument>
              <argument key="rejudgingid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="entry_point" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="origsubmitid" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="maxruntime" type="collection">
                <argument key="type">number</argument>
                <argument key="format">float</argument>
              </argument>
              <argument key="memlimit" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="outputlimit" type="collection">
                <argument key="type">integer</argument>
              </argument>
              <argument key="run" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="compare" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="compare_args" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="compile_script" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="compare_md5sum" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="run_md5sum" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="compile_script_md5sum" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="testcases" type="collection">
                <argument key="type">array</argument>
                <argument key="items" type="collection">
                  <argument key="type">object</argument>
                  <argument key="properties" type="collection">
                    <argument key="md5sum_input" type="collection">
                      <argument key="type">string</argument>
                    </argument>
                    <argument key="md5sum_output" type="collection">
                      <argument key="type">string</argument>
                    </argument>
                    <argument key="testcaseid" type="collection">
                      <argument key="type">integer</argument>
                    </argument>
                    <argument key="rank" type="collection">
                      <argument key="type">integer</argument>
                    </argument>
                  </argument>
                </argument>
              </argument>
            </argument>
          </argument>
          <argument key="ContestState" type="collection">
            <argument key="type">object</argument>
            <argument key="properties" type="collection">
              <argument key="started" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
              <argument key="ended" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
              <argument key="frozen" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
              <argument key="thawed" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
              <argument key="finalized" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
              <argument key="end_of_updates" type="collection">
                <argument key="type">string</argument>
                <argument key="format">date-time</argument>
              </argument>
            </argument>
          </argument>
          <argument key="Award" type="collection">
            <argument key="type">object</argument>
            <argument key="properties" type="collection">
              <argument key="id" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="citation" type="collection">
                <argument key="type">string</argument>
              </argument>
              <argument key="team_ids" type="collection">
                <argument key="type">array</argument>
                <argument key="items" type="collection">
                  <argument key="type">string</argument>
                </argument>
              </argument>
            </argument>
          </argument>
        </argument>
        <argument key="parameters" type="collection">
          <argument key="cid" type="collection">
            <argument key="name">cid</argument>
            <argument key="in">path</argument>
            <argument key="type">string</argument>
            <argument key="description">The contest ID</argument>
            <argument key="required">true</argument>
          </argument>
          <argument key="id" type="collection">
            <argument key="name">id</argument>
            <argument key="in">path</argument>
            <argument key="type">string</argument>
            <argument key="description">The ID of the entity to get</argument>
            <argument key="required">true</argument>
          </argument>
          <argument key="idlist" type="collection">
            <argument key="name">ids[]</argument>
            <argument key="in">query</argument>
            <argument key="type">array</argument>
            <argument key="description">Filter the objects to get on this list of ID's</argument>
            <argument key="collectionFormat">multi</argument>
            <argument key="items" type="collection">
              <argument key="type">string</argument>
              <argument key="description">A single ID</argument>
            </argument>
          </argument>
          <argument key="strict" type="collection">
            <argument key="name">strict</argument>
            <argument key="in">query</argument>
            <argument key="type">boolean</argument>
            <argument key="default">false</argument>
            <argument key="description">Whether to only include CCS compliant properties in the response</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="nelmio_api_doc.describers.default" class="Nelmio\ApiDocBundle\Describer\DefaultDescriber" public="false">
      <tag name="nelmio_api_doc.describer" priority="-1000"/>
      <tag name="nelmio_api_doc.describer.default" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.route_describers.route_metadata" class="Nelmio\ApiDocBundle\RouteDescriber\RouteMetadataDescriber" public="false">
      <tag name="nelmio_api_doc.route_describer" priority="-300"/>
    </service>
    <service id="nelmio_api_doc.model_describers.object" class="Nelmio\ApiDocBundle\ModelDescriber\ObjectModelDescriber" public="false">
      <tag name="nelmio_api_doc.model_describer"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.model_describers.object_fallback" class="Nelmio\ApiDocBundle\ModelDescriber\FallbackObjectModelDescriber" public="false">
      <tag name="nelmio_api_doc.model_describer" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.array" class="Nelmio\ApiDocBundle\PropertyDescriber\ArrayPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.boolean" class="Nelmio\ApiDocBundle\PropertyDescriber\BooleanPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.float" class="Nelmio\ApiDocBundle\PropertyDescriber\FloatPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.integer" class="Nelmio\ApiDocBundle\PropertyDescriber\IntegerPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.string" class="Nelmio\ApiDocBundle\PropertyDescriber\StringPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.date_time" class="Nelmio\ApiDocBundle\PropertyDescriber\DateTimePropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer"/>
    </service>
    <service id="nelmio_api_doc.object_model.property_describers.object" class="Nelmio\ApiDocBundle\PropertyDescriber\ObjectPropertyDescriber" public="false">
      <tag name="nelmio_api_doc.object_model.property_describer" priority="-1000"/>
    </service>
    <service id="nelmio_api_doc.form.documentation_extension" class="Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
    </service>
    <service id="nelmio_api_doc.generator.default" class="Nelmio\ApiDocBundle\ApiDocGenerator" public="true">
      <argument type="tagged_iterator" tag="nelmio_api_doc.describer.default"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.model_describer"/>
      <call method="setAlternativeNames">
        <argument type="collection"/>
      </call>
    </service>
    <service id="nelmio_api_doc.describers.route.default" class="Nelmio\ApiDocBundle\Describer\RouteDescriber" public="false">
      <tag name="nelmio_api_doc.describer.default" priority="-400"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="tagged_iterator" tag="nelmio_api_doc.route_describer"/>
    </service>
    <service id="nelmio_api_doc.describers.swagger_php.default" class="Nelmio\ApiDocBundle\Describer\SwaggerPhpDescriber" public="false">
      <tag name="nelmio_api_doc.describer.default" priority="-200"/>
      <argument type="service" id="nelmio_api_doc.routes.default"/>
      <argument type="service" id="nelmio_api_doc.controller_reflector"/>
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="monolog.logger"/>
    </service>
    <service id="nelmio_api_doc.describers.config.default" class="Nelmio\ApiDocBundle\Describer\ExternalDocDescriber" public="false">
      <tag name="nelmio_api_doc.describer.default" priority="990"/>
      <argument type="collection"/>
      <argument>true</argument>
    </service>
    <service id="nelmio_api_doc.routes.default" class="Symfony\Component\Routing\RouteCollection" public="false">
      <argument type="service">
        <service class="Symfony\Component\Routing\RouteCollection">
          <factory service="router.default" method="getRouteCollection"/>
        </service>
      </argument>
      <factory method="filter">
        <service class="Nelmio\ApiDocBundle\Routing\FilteredRouteCollectionBuilder">
          <argument type="service" id="annotations.cached_reader"/>
          <argument type="service" id="nelmio_api_doc.controller_reflector"/>
          <argument>default</argument>
          <argument type="collection">
            <argument key="path_patterns" type="collection">
              <argument>^/api/v4</argument>
            </argument>
            <argument key="host_patterns" type="collection"/>
            <argument key="name_patterns" type="collection"/>
            <argument key="with_annotation">false</argument>
          </argument>
        </service>
      </factory>
    </service>
    <service id="nelmio_api_doc.generator_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="default" type="service" id="nelmio_api_doc.generator.default"/>
      </argument>
    </service>
    <service id="nelmio_api_doc.route_describers.php_doc" class="Nelmio\ApiDocBundle\RouteDescriber\PhpDocDescriber" public="false">
      <tag name="nelmio_api_doc.route_describer" priority="-275"/>
    </service>
    <service id="nelmio_api_doc.route_describers.fos_rest" class="Nelmio\ApiDocBundle\RouteDescriber\FosRestDescriber" public="false">
      <tag name="nelmio_api_doc.route_describer" priority="-250"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="nelmio_api_doc.model_describers.jms" class="Nelmio\ApiDocBundle\ModelDescriber\JMSModelDescriber" public="false">
      <tag name="nelmio_api_doc.model_describer" priority="50"/>
      <argument type="service" id="jms_serializer.metadata_factory"/>
      <argument>null</argument>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.controller.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="sensio_framework_extra.converter.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.converter.manager"/>
      <argument>true</argument>
    </service>
    <service id="sensio_framework_extra.converter.manager" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager">
      <call method="add">
        <argument type="service" id="sensio_framework_extra.converter.doctrine.orm"/>
        <argument>0</argument>
        <argument>doctrine.orm</argument>
      </call>
      <call method="add">
        <argument type="service" id="framework_extra_bundle.date_time_param_converter"/>
        <argument>0</argument>
        <argument>datetime</argument>
      </call>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter">
      <tag name="request.param_converter" converter="doctrine.orm"/>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="service" id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.date_time_param_converter" class="Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter">
      <tag name="request.param_converter" converter="datetime"/>
    </service>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language.default" class="Symfony\Component\ExpressionLanguage\ExpressionLanguage"/>
    <service id="sensio_framework_extra.view.guesser" class="Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser">
      <argument type="service" id="kernel"/>
    </service>
    <service id="sensio_framework_extra.view.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="sensio_framework_extra.view.guesser"/>
      <argument type="service" id="twig" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.cache.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="sensio_framework_extra.security.listener" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="sensio_framework_extra.security.expression_language.default" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="sensio_framework_extra.security.expression_language.default" class="Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage"/>
    <service id="framework_extra_bundle.event.is_granted" class="Sensio\Bundle\FrameworkExtraBundle\EventListener\IsGrantedListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="framework_extra_bundle.argument_name_convertor"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="framework_extra_bundle.argument_name_convertor" class="Sensio\Bundle\FrameworkExtraBundle\Request\ArgumentNameConverter">
      <argument type="service" id="argument_metadata_factory"/>
    </service>
    <service id="monolog.logger" class="Symfony\Bridge\Monolog\Logger" public="false">
      <argument>app</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="useMicrosecondTimestamps">
        <argument>true</argument>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger_prototype" class="Symfony\Bridge\Monolog\Logger" abstract="true">
      <argument></argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.activation_strategy.not_found" class="Symfony\Bridge\Monolog\Handler\FingersCrossed\NotFoundActivationStrategy" abstract="true"/>
    <service id="monolog.handler.fingers_crossed.error_level_activation_strategy" class="Monolog\Handler\FingersCrossed\ErrorLevelActivationStrategy" abstract="true"/>
    <service id="monolog.formatter.chrome_php" class="Monolog\Formatter\ChromePHPFormatter" public="false"/>
    <service id="monolog.formatter.gelf_message" class="Monolog\Formatter\GelfMessageFormatter" public="false"/>
    <service id="monolog.formatter.html" class="Monolog\Formatter\HtmlFormatter" public="false"/>
    <service id="monolog.formatter.json" class="Monolog\Formatter\JsonFormatter" public="false"/>
    <service id="monolog.formatter.line" class="Monolog\Formatter\LineFormatter" public="false"/>
    <service id="monolog.formatter.loggly" class="Monolog\Formatter\LogglyFormatter" public="false"/>
    <service id="monolog.formatter.normalizer" class="Monolog\Formatter\NormalizerFormatter" public="false"/>
    <service id="monolog.formatter.scalar" class="Monolog\Formatter\ScalarFormatter" public="false"/>
    <service id="monolog.formatter.wildfire" class="Monolog\Formatter\WildfireFormatter" public="false"/>
    <service id="monolog.formatter.logstash" class="Monolog\Formatter\LogstashFormatter" public="false">
      <argument>app</argument>
    </service>
    <service id="monolog.processor.psr_log_message" class="Monolog\Processor\PsrLogMessageProcessor" public="false"/>
    <service id="monolog.handler.main" class="Monolog\Handler\StreamHandler">
      <tag name="kernel.reset" method="reset"/>
      <argument>/domjudge/webapp/var/log/dev.log</argument>
      <argument>100</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>false</argument>
      <call method="pushProcessor">
        <argument type="service" id="monolog.processor.psr_log_message"/>
      </call>
    </service>
    <service id="monolog.handler.console" class="Symfony\Bridge\Monolog\Handler\ConsoleHandler">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument>null</argument>
      <argument>true</argument>
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="twig.error_renderer.html"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>/domjudge/webapp/var/cache/dev/srcApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/domjudge/webapp/src/Resources</argument>
      <argument type="collection">
        <argument>/domjudge/webapp/src</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.main" type="service" id="monolog.handler.main" on-invalid="ignore_uninitialized"/>
        <argument key="monolog.handler.console" type="service" id="monolog.handler.console" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.main" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="monolog.handler.console" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="fos_rest.view_handler.default" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator.D1Oy4Sg"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id="fragment.renderer.hinclude" class="Symfony\Component\HttpKernel\Fragment\HIncludeFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="hinclude"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="uri_signer"/>
      <argument>null</argument>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~NHwpuPI" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~NHwpuPI" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~NHwpuPI"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/domjudge/webapp</argument>
      <argument type="service" id=".2_~NHwpuPI"/>
      <argument type="service" id="monolog.logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="monolog.logger.console" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>/domjudge/webapp</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.security_expression_language</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form\Type</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\Type\AbstractExternalIdEntityType</argument>
        <argument>App\Form\Type\BaylorCmsType</argument>
        <argument>App\Form\Type\BootstrapFileType</argument>
        <argument>App\Form\Type\ContestExportType</argument>
        <argument>App\Form\Type\ContestImportType</argument>
        <argument>App\Form\Type\ContestProblemType</argument>
        <argument>App\Form\Type\ContestType</argument>
        <argument>App\Form\Type\ExecutableType</argument>
        <argument>App\Form\Type\ExecutableUploadType</argument>
        <argument>App\Form\Type\FinalizeContestType</argument>
        <argument>App\Form\Type\GeneratePasswordsType</argument>
        <argument>App\Form\Type\JsonImportType</argument>
        <argument>App\Form\Type\JudgehostRestrictionType</argument>
        <argument>App\Form\Type\JudgehostType</argument>
        <argument>App\Form\Type\JudgehostsType</argument>
        <argument>App\Form\Type\LanguageType</argument>
        <argument>App\Form\Type\MinimalUserType</argument>
        <argument>App\Form\Type\PrintType</argument>
        <argument>App\Form\Type\ProblemType</argument>
        <argument>App\Form\Type\ProblemUploadMultipleType</argument>
        <argument>App\Form\Type\ProblemUploadType</argument>
        <argument>App\Form\Type\RejudgingType</argument>
        <argument>App\Form\Type\RemovedIntervalType</argument>
        <argument>App\Form\Type\SubmitProblemType</argument>
        <argument>App\Form\Type\TeamAffiliationType</argument>
        <argument>App\Form\Type\TeamCategoryType</argument>
        <argument>App\Form\Type\TeamClarificationType</argument>
        <argument>App\Form\Type\TeamType</argument>
        <argument>App\Form\Type\TsvImportType</argument>
        <argument>App\Form\Type\UserRegistrationType</argument>
        <argument>App\Form\Type\UserType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
      </argument>
      <argument type="collection">
        <argument>Nelmio\ApiDocBundle\Form\Extension\DocumentationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>FOS\RestBundle\Form\Extension\DisableCSRFExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache" public="false">
      <argument type="service" id="cache.app"/>
      <deprecated>The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~S10m.mw" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>/domjudge/webapp/var/cache/dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <factory service="session" method="getAttributeBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>/domjudge/webapp/var/cache/dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~S10m.mw"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.Bppmeg3"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~WivSLxm"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.mkcAsqc"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="nelmio_api_doc.form.documentation_extension"/>
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="fos_rest.form.extension.csrf_disable"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.doctrine"/>
        <argument type="service" id="form.type_guesser.validator"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument>null</argument>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument>null</argument>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument>null</argument>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._version__default" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false">
      <argument>v=7.3.3</argument>
      <argument>%%s?%%s</argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets._version__default"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>/domjudge/lib/vendor/symfony/form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>/domjudge/webapp/var/cache/dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/domjudge/webapp/var/cache/dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.wM3zFPK"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument type="service" id=".debug.http_client" on-invalid="null"/>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="fragment.listener" class="Symfony\Component\HttpKernel\EventListener\FragmentListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="uri_signer"/>
      <argument>/_fragment</argument>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.http_client"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.dump"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:/domjudge/webapp/var/cache/dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="monolog.logger.profiler" on-invalid="ignore"/>
      <argument>/domjudge/webapp/var/cache/dev/srcApp_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
    </service>
    <service id=".1_ResolvedFormTypeFactory~WivSLxm" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="data_collector.http_client" class="Symfony\Component\HttpClient\DataCollector\HttpClientDataCollector">
      <tag name="data_collector" template="@WebProfiler/Collector/http_client.html.twig" id="http_client" priority="250"/>
      <call method="registerClient">
        <argument>http_client</argument>
        <argument type="service" id=".debug.http_client"/>
      </call>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.php" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>/domjudge/webapp</argument>
      <argument type="service" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="monolog.logger.event" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.body_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.zone_matcher_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>248</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ApiHeadersListener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\BodyTooBigListener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\ProfilerDisableListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="App\EventListener\UpdateUserRolesListener"/>
          <argument>onRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>security.authentication.success</argument>
        <argument type="collection">
          <argument type="service" id="App\Security\UserStateUpdater"/>
          <argument>updateUserState</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.controller.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.converter.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.view.listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.cache.listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="sensio_framework_extra.security.listener"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="framework_extra_bundle.event.is_granted"/>
          <argument>onKernelControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onCommand</argument>
        </argument>
        <argument>255</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="monolog.handler.console"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="fragment.listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>48</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service" id="fos_rest.view_response_listener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>30</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service" id="debug.dump_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>1024</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.log_processor" class="Symfony\Bridge\Monolog\Processor\DebugProcessor" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~X6cKvd3" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XwZNkPh"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.controller"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.yaml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="fos_rest.routing.loader.xml_collection"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <argument type="service" id="service_container"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~X6cKvd3"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.1R6MOG0.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">/domjudge/webapp/var/cache/dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.router" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument>/domjudge/webapp</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_PhpArrayAdapter~JTjLxXg" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>/domjudge/webapp/var/cache/dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id=".1_ArrayCache~JTjLxXg" class="Doctrine\Common\Cache\ArrayCache" public="false"/>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\CachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service" id=".1_ArrayCache~JTjLxXg"/>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service" id="annotations.cache"/>
    </service>
    <service id="annotations.filesystem_cache" class="Doctrine\Common\Cache\FilesystemCache" public="false">
      <argument></argument>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>/domjudge/webapp/var/cache/dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_PhpArrayAdapter~JTjLxXg"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>/domjudge/webapp/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>/domjudge/webapp/.env.dev.local</argument>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id=".1_~6vnZ9zS" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">/domjudge/webapp/var/cache/dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.dump"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Twig\Extensions\TextExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="App\Twig\TwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="jms_serializer.twig_extension.serializer"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <call method="addGlobal">
        <argument>DOMJUDGE_VERSION</argument>
        <argument>7.3.3</argument>
      </call>
      <call method="addGlobal">
        <argument>DJ_CHARACTER_SET</argument>
        <argument>utf-8</argument>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>/domjudge/webapp/src</argument>
      <argument type="collection">
        <argument key="/domjudge/lib/vendor/symfony/twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>/domjudge/webapp/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.o9nGMXB.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>/domjudge/webapp</argument>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/doctrine/doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/webapp/templates/bundles/NelmioApiDocBundle</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/nelmio/api-doc-bundle/Resources/views</argument>
        <argument>!NelmioApiDoc</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/webapp/templates/bundles/TwigBundle</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>Debug</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/debug-bundle/Resources/views</argument>
        <argument>!Debug</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/webapp/templates</argument>
      </call>
      <call method="addPath">
        <argument>/domjudge/lib/vendor/symfony/twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument>null</argument>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>/domjudge/webapp</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false"/>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.7puFXBj"/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~6vnZ9zS"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="collection">
        <argument type="service" id="service_container"/>
        <argument>twig.form.renderer</argument>
      </argument>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>/domjudge/webapp</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>/domjudge/webapp/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>/domjudge/webapp/src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.guard.api"/>
        <argument type="service" id="security.authentication.provider.anonymous.api"/>
        <argument type="service" id="security.authentication.provider.guard.main"/>
        <argument type="service" id="security.authentication.provider.dao.main"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="class">Symfony\Component\Security\Core\Encoder\NativePasswordEncoder</argument>
          <argument key="arguments" type="collection">
            <argument>null</argument>
            <argument>null</argument>
            <argument>7</argument>
            <argument>2y</argument>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language"/>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument>%security.role_hierarchy.roles%</argument>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.role_hierarchy"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.zs7NVBS"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
        <argument key="security.firewall.map.context.main" type="service" id=".security.request_matcher.3UEFixr"/>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>main</argument>
        <argument>logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.xujZZ.E"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.QWkwKV5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.O7Tsk.w"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.MBt.Hn5"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.cRNYaJ1"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.domjudge_db_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.domjudge_db_provider</argument>
      <argument>null</argument>
      <argument>App\Security\DOMJudgeIPAuthenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.authentication.provider.guard.api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      <argument>api</argument>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api" provider="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeBasicAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.anonymous.api" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.api" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.authentication.listener.anonymous.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>App\Security\UserChecker</argument>
      <argument>.security.request_matcher.3UEFixr</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.domjudge_db_provider</argument>
      <argument>main</argument>
      <argument>security.authentication.form_entry_point.main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
        <argument>form_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.3UEFixr" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener.main" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.main"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.session"/>
      </call>
    </service>
    <service id="security.logout.success_handler.main" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/public</argument>
    </service>
    <service id="security.authentication.provider.guard.main" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="App\Security\DOMJudgeXHeadersAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      <argument>main</argument>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.main" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>main</argument>
      <argument type="iterator">
        <argument type="service" id="App\Security\DOMJudgeXHeadersAuthenticator"/>
        <argument type="service" id="App\Security\DOMJudgeIPAuthenticator"/>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao.main" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="App\Security\UserChecker"/>
      <argument>main</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">login</argument>
          <argument key="use_referer">true</argument>
          <argument key="always_use_default_target_path">false</argument>
          <argument key="default_target_path">/</argument>
          <argument key="target_path_parameter">_target_path</argument>
        </argument>
      </call>
      <call method="setProviderKey">
        <argument>main</argument>
      </call>
    </service>
    <service id="security.authentication.failure_handler.main.form_login" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <call method="setOptions">
        <argument type="collection">
          <argument key="login_path">login</argument>
          <argument key="failure_path">null</argument>
          <argument key="failure_forward">false</argument>
          <argument key="failure_path_parameter">_failure_path</argument>
        </argument>
      </call>
    </service>
    <service id="security.authentication.listener.form.main" class="App\Security\UsernamePasswordFormAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="main" provider="security.user.provider.concrete.domjudge_db_provider"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.success_handler.main.form_login"/>
      <argument type="service" id="security.authentication.failure_handler.main.form_login"/>
      <argument type="collection">
        <argument key="check_path">login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_parameter">_username</argument>
        <argument key="password_parameter">_password</argument>
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">authenticate</argument>
        <argument key="post_only">true</argument>
      </argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="security.authentication.form_entry_point.main" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false">
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument>false</argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument type="service" id="security.authentication.form_entry_point.main"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="monolog.logger.security" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.guard.main"/>
        <argument type="service" id="security.authentication.listener.form.main"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument type="service" id="security.logout_listener.main"/>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.zs7NVBS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.main" type="service" id="security.firewall.map.context.main"/>
      </argument>
    </service>
    <service id=".security.request_matcher.xujZZ.E" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/$</argument>
    </service>
    <service id=".security.request_matcher.QWkwKV5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/login</argument>
    </service>
    <service id=".security.request_matcher.O7Tsk.w" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/register</argument>
    </service>
    <service id=".security.request_matcher.MBt.Hn5" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/public</argument>
    </service>
    <service id=".security.request_matcher.cRNYaJ1" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.jms"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="html">302</argument>
      </argument>
      <argument>twig</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">true</argument>
      </argument>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler" public="false">
      <argument></argument>
    </service>
    <service id="fos_rest.routing.loader.directory" class="FOS\RestBundle\Routing\Loader\DirectoryRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
    </service>
    <service id="fos_rest.routing.loader.controller" class="FOS\RestBundle\Routing\Loader\RestRouteLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id=".legacy_controller_name_converter" on-invalid="null"/>
      <argument type="service" id="fos_rest.routing.loader.reader.controller"/>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.processor" class="FOS\RestBundle\Routing\Loader\RestRouteProcessor" public="false"/>
    <service id="fos_rest.routing.loader.yaml_collection" class="FOS\RestBundle\Routing\Loader\RestYamlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.xml_collection" class="FOS\RestBundle\Routing\Loader\RestXmlCollectionLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="fos_rest.routing.loader.processor"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="fos_rest.routing.loader.reader.controller" class="FOS\RestBundle\Routing\Loader\Reader\RestControllerReader" public="false">
      <argument type="service" id="fos_rest.routing.loader.reader.action"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.routing.loader.reader.action" class="FOS\RestBundle\Routing\Loader\Reader\RestActionReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="fos_rest.inflector.doctrine"/>
      <argument>true</argument>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
        <argument key="html">true</argument>
      </argument>
      <argument>true</argument>
    </service>
    <service id="fos_rest.inflector.doctrine" class="FOS\RestBundle\Inflector\DoctrineInflector" public="false"/>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" public="false" lazy="true">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.configured_serialization_context_factory"/>
      <argument type="service" id="jms_serializer.configured_deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter" public="false" lazy="true">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="fos_rest.form.extension.csrf_disable" class="FOS\RestBundle\Form\Extension\DisableCSRFExtension">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="security.token_storage"/>
      <argument>ROLE_API</argument>
      <argument type="service" id="security.authorization_checker"/>
    </service>
    <service id="fos_rest.exception_listener" class="FOS\RestBundle\EventListener\ExceptionListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>fos_rest.exception.controller:showAction</argument>
      <argument type="service" id="monolog.logger.request" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="fos_rest.exception.twig_controller" class="FOS\RestBundle\Controller\TwigExceptionController" public="true" autowire="true">
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument type="service" id="fos_rest.exception.codes_map"/>
      <argument>true</argument>
      <argument type="service">
        <service class="Twig\Environment" public="true">
          <argument type="service" id="twig.loader.native_filesystem"/>
          <argument type="collection">
            <argument key="debug">true</argument>
            <argument key="strict_variables">true</argument>
            <argument key="autoescape">name</argument>
            <argument key="cache">/domjudge/webapp/var/cache/dev/twig</argument>
            <argument key="charset">UTF-8</argument>
          </argument>
          <call method="addExtension">
            <argument type="service" id="twig.extension.security_csrf"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.profiler"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.trans"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.assets"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.code"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.routing"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.yaml"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.debug.stopwatch"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.expression"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.httpkernel"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.httpfoundation"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.form"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.logout_url"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.security"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.dump"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="Twig\Extensions\TextExtension"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="App\Twig\TwigExtension"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="doctrine.twig.doctrine_extension"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="jms_serializer.twig_extension.serializer"/>
          </call>
          <call method="addExtension">
            <argument type="service" id="twig.extension.webprofiler"/>
          </call>
          <call method="addGlobal">
            <argument>app</argument>
            <argument type="service" id="twig.app_variable"/>
          </call>
          <call method="addRuntimeLoader">
            <argument type="service" id="twig.runtime_loader"/>
          </call>
          <call method="addGlobal">
            <argument>DOMJUDGE_VERSION</argument>
            <argument>7.3.3</argument>
          </call>
          <call method="addGlobal">
            <argument>DJ_CHARACTER_SET</argument>
            <argument>utf-8</argument>
          </call>
          <configurator service="twig.configurator.environment" method="configure"/>
        </service>
      </argument>
    </service>
    <service id="fos_rest.exception.codes_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection"/>
    </service>
    <service id="fos_rest.exception.messages_map" class="FOS\RestBundle\Util\ExceptionValueMap" public="false">
      <argument type="collection">
        <argument key="Symfony\Component\HttpKernel\Exception\BadRequestHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\AccessDeniedHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\NotAcceptableHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\NotFoundHttpException">true</argument>
        <argument key="Symfony\Component\HttpKernel\Exception\UnauthorizedHttpException">true</argument>
      </argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.jms" class="FOS\RestBundle\Serializer\Normalizer\ExceptionHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.serializer.exception_normalizer.symfony" class="FOS\RestBundle\Serializer\Normalizer\ExceptionNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
      <argument type="service" id="fos_rest.exception.messages_map"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.view_response_listener" class="FOS\RestBundle\EventListener\ViewResponseListener">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="fos_rest.view_handler.default"/>
      <argument>true</argument>
    </service>
    <service id="fos_rest.normalizer.camel_keys" class="FOS\RestBundle\Normalizer\CamelKeysNormalizer"/>
    <service id="fos_rest.normalizer.camel_keys_with_leading_underscore" class="FOS\RestBundle\Normalizer\CamelKeysNormalizerWithLeadingUnderscore"/>
    <service id="fos_rest.decoder.json" class="FOS\RestBundle\Decoder\JsonDecoder"/>
    <service id="fos_rest.decoder.jsontoform" class="FOS\RestBundle\Decoder\JsonToFormDecoder"/>
    <service id="fos_rest.decoder.xml" class="FOS\RestBundle\Decoder\XmlDecoder"/>
    <service id="fos_rest.decoder_provider" class="FOS\RestBundle\Decoder\ContainerDecoderProvider">
      <argument type="service" id=".service_locator.Ey0pI2t"/>
      <argument type="collection">
        <argument key="json">fos_rest.decoder.json</argument>
      </argument>
    </service>
    <service id="fos_rest.body_listener" class="FOS\RestBundle\EventListener\BodyListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="10"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="fos_rest.decoder_provider"/>
      <argument>false</argument>
      <call method="setDefaultFormat">
        <argument>null</argument>
      </call>
    </service>
    <service id=".service_locator.Ey0pI2t" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.decoder.json" type="service" id="fos_rest.decoder.json"/>
      </argument>
    </service>
    <service id="fos_rest.zone_matcher_listener" class="FOS\RestBundle\EventListener\ZoneMatcherListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="248"/>
      <tag name="container.hot_path"/>
      <call method="addRequestMatcher">
        <argument type="service" id="fos_rest.zone_request_matcher.b417c83ef2bcf459b4b2bb1e5a42d5c86f974ffd6bfe73357a9f04d46025529306a33be3"/>
      </call>
    </service>
    <service id="fos_rest.zone_request_matcher" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false"/>
    <service id="fos_rest.zone_request_matcher.b417c83ef2bcf459b4b2bb1e5a42d5c86f974ffd6bfe73357a9f04d46025529306a33be3" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/*</argument>
    </service>
    <service id=".2_HtmlDumper~m7hI8.Y" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~m7hI8.Y" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>/domjudge/webapp</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use the "web_profiler.controller.exception_panel" service instead.</deprecated>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~m7hI8.Y"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~m7hI8.Y"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDiffDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsDumpSchemaDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsExecuteDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsGenerateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsLatestDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsMigrateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsRollupDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsStatusDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsUpToDateDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Bundle\MigrationsBundle\Command\MigrationsVersionDoctrineCommand">
      <tag name="console.command"/>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ClarificationFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ContestFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ContestProblemFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ExecutableFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\JudgehostFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\ProblemFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\TeamAffiliationFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\TeamCategoryFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\TeamFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\TestcaseFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\UserFixture"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id=".6_HtmlDescriptor~yHinDUt" class="Symfony\Component\VarDumper\Command\Descriptor\HtmlDescriptor" public="false">
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id=".5_CliDescriptor~yHinDUt" class="Symfony\Component\VarDumper\Command\Descriptor\CliDescriptor" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
    </service>
    <service id=".4_CliContextProvider~yHinDUt" class="Symfony\Component\VarDumper\Dumper\ContextProvider\CliContextProvider" public="false"/>
    <service id=".3_RequestContextProvider~yHinDUt" class="Symfony\Component\VarDumper\Dumper\ContextProvider\RequestContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id=".2_SourceContextProvider~yHinDUt" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/domjudge/webapp</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id=".1_SourceContextProvider~yHinDUt" class="Symfony\Component\VarDumper\Dumper\ContextProvider\SourceContextProvider" public="false">
      <argument>UTF-8</argument>
      <argument>/domjudge/webapp</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
    </service>
    <service id="twig.extension.dump" class="Symfony\Bridge\Twig\Extension\DumpExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.html_dumper"/>
    </service>
    <service id="data_collector.dump" class="Symfony\Component\HttpKernel\DataCollector\DumpDataCollector" public="true">
      <tag name="data_collector" id="dump" template="@Debug/Profiler/dump.html.twig" priority="240"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>UTF-8</argument>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
    </service>
    <service id="debug.dump_listener" class="Symfony\Component\HttpKernel\EventListener\DumpListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="var_dumper.cloner"/>
      <argument type="service" id="var_dumper.contextualized_cli_dumper"/>
      <argument>null</argument>
    </service>
    <service id="var_dumper.cloner" class="Symfony\Component\VarDumper\Cloner\VarCloner" public="true">
      <call method="setMaxItems">
        <argument>2500</argument>
      </call>
      <call method="setMinDepth">
        <argument>1</argument>
      </call>
      <call method="setMaxString">
        <argument>-1</argument>
      </call>
      <call method="addCasters">
        <argument type="collection">
          <argument key="Closure">Symfony\Component\VarDumper\Caster\ReflectionCaster::unsetClosureFileInfo</argument>
        </argument>
      </call>
    </service>
    <service id="var_dumper.contextualized_cli_dumper" class="Symfony\Component\VarDumper\Dumper\ContextualizedDumper" public="false">
      <argument type="service" id="var_dumper.contextualized_cli_dumper.inner"/>
      <argument type="collection">
        <argument key="source" type="service" id=".1_SourceContextProvider~yHinDUt"/>
      </argument>
    </service>
    <service id="var_dumper.html_dumper" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="var_dumper.server_connection" class="Symfony\Component\VarDumper\Server\Connection" public="false">
      <argument></argument>
      <argument type="collection">
        <argument key="source" type="service" id=".2_SourceContextProvider~yHinDUt"/>
        <argument key="request" type="service" id=".3_RequestContextProvider~yHinDUt"/>
        <argument key="cli" type="service" id=".4_CliContextProvider~yHinDUt"/>
      </argument>
    </service>
    <service id="var_dumper.dump_server" class="Symfony\Component\VarDumper\Server\DumpServer" public="false">
      <tag name="monolog.logger" channel="debug"/>
      <argument></argument>
      <argument type="service" id="monolog.logger.debug" on-invalid="null"/>
    </service>
    <service id="var_dumper.command.server_dump" class="Symfony\Bundle\DebugBundle\Command\ServerDumpPlaceholderCommand" public="false">
      <tag name="console.command" command="server:dump"/>
      <argument type="service" id="var_dumper.dump_server"/>
      <argument type="collection">
        <argument key="cli" type="service" id=".5_CliDescriptor~yHinDUt"/>
        <argument key="html" type="service" id=".6_HtmlDescriptor~yHinDUt"/>
      </argument>
      <call method="setName">
        <argument>server:dump</argument>
      </call>
    </service>
    <service id="monolog.command.server_log" class="Symfony\Bridge\Monolog\Command\ServerLogCommand" public="false">
      <tag name="console.command" command="server:log"/>
      <call method="setName">
        <argument>server:log</argument>
      </call>
    </service>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument>/domjudge/webapp</argument>
      <argument>/domjudge/webapp/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <call method="setMangerRegistryClassName">
        <argument>Doctrine\Persistence\ManagerRegistry</argument>
      </call>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>/domjudge/webapp</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>/domjudge/webapp</argument>
    </service>
    <service id=".instanceof.Twig_ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.Twig\Extensions\TextExtension" class="Twig\Extensions\TextExtension" public="false" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" class="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ImportEventFeedCommand" class="App\Command\ImportEventFeedCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\LoadExampleDataCommand" class="App\Command\LoadExampleDataCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ResetUserPasswordCommand" class="App\Command\ResetUserPasswordCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Console\Command\Command.0.App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Command\ScoreboardMergeCommand" class="App\Command\ScoreboardMergeCommand" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\AwardsController" class="App\Controller\API\AwardsController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\BalloonController" class="App\Controller\API\BalloonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ClarificationController" class="App\Controller\API\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ContestController" class="App\Controller\API\ContestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ExecutableController" class="App\Controller\API\ExecutableController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\GeneralInfoController" class="App\Controller\API\GeneralInfoController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\GroupController" class="App\Controller\API\GroupController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgehostController" class="App\Controller\API\JudgehostController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgementController" class="App\Controller\API\JudgementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\JudgementTypeController" class="App\Controller\API\JudgementTypeController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\LanguageController" class="App\Controller\API\LanguageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\OrganizationController" class="App\Controller\API\OrganizationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ProblemController" class="App\Controller\API\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\RunController" class="App\Controller\API\RunController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\ScoreboardController" class="App\Controller\API\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\SubmissionController" class="App\Controller\API\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\TeamController" class="App\Controller\API\TeamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\TestcaseController" class="App\Controller\API\TestcaseController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\TestcaseController" class="App\Controller\API\TestcaseController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\TestcaseController" class="App\Controller\API\TestcaseController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\API\UserController" class="App\Controller\API\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\AnalysisController" class="App\Controller\Jury\AnalysisController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\AuditLogController" class="App\Controller\Jury\AuditLogController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\BalloonController" class="App\Controller\Jury\BalloonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ClarificationController" class="App\Controller\Jury\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ConfigController" class="App\Controller\Jury\ConfigController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ContestController" class="App\Controller\Jury\ContestController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ExecutableController" class="App\Controller\Jury\ExecutableController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ImportExportController" class="App\Controller\Jury\ImportExportController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\InternalErrorController" class="App\Controller\Jury\InternalErrorController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\JudgehostController" class="App\Controller\Jury\JudgehostController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\JudgehostRestrictionController" class="App\Controller\Jury\JudgehostRestrictionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\JudgehostRestrictionController" class="App\Controller\Jury\JudgehostRestrictionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\JudgehostRestrictionController" class="App\Controller\Jury\JudgehostRestrictionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\JuryMiscController" class="App\Controller\Jury\JuryMiscController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\LanguageController" class="App\Controller\Jury\LanguageController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\PrintController" class="App\Controller\Jury\PrintController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ProblemController" class="App\Controller\Jury\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\RejudgingController" class="App\Controller\Jury\RejudgingController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ScoreboardController" class="App\Controller\Jury\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\ShadowDifferencesController" class="App\Controller\Jury\ShadowDifferencesController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\SubmissionController" class="App\Controller\Jury\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamAffiliationController" class="App\Controller\Jury\TeamAffiliationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamCategoryController" class="App\Controller\Jury\TeamCategoryController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\TeamController" class="App\Controller\Jury\TeamController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Jury\UserController" class="App\Controller\Jury\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\PublicController" class="App\Controller\PublicController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RootController" class="App\Controller\RootController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RootController" class="App\Controller\RootController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RootController" class="App\Controller\RootController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ClarificationController" class="App\Controller\Team\ClarificationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\MiscController" class="App\Controller\Team\MiscController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ProblemController" class="App\Controller\Team\ProblemController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\ScoreboardController" class="App\Controller\Team\ScoreboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Team\SubmissionController" class="App\Controller\Team\SubmissionController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ClarificationFixture" class="App\DataFixtures\ClarificationFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ClarificationFixture" class="App\DataFixtures\ClarificationFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ContestFixture" class="App\DataFixtures\ContestFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ContestFixture" class="App\DataFixtures\ContestFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ContestProblemFixture" class="App\DataFixtures\ContestProblemFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ContestProblemFixture" class="App\DataFixtures\ContestProblemFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ExecutableFixture" class="App\DataFixtures\ExecutableFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ExecutableFixture" class="App\DataFixtures\ExecutableFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\JudgehostFixture" class="App\DataFixtures\JudgehostFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\JudgehostFixture" class="App\DataFixtures\JudgehostFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\ProblemFixture" class="App\DataFixtures\ProblemFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\ProblemFixture" class="App\DataFixtures\ProblemFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\TeamAffiliationFixture" class="App\DataFixtures\TeamAffiliationFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\TeamAffiliationFixture" class="App\DataFixtures\TeamAffiliationFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\TeamCategoryFixture" class="App\DataFixtures\TeamCategoryFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\TeamCategoryFixture" class="App\DataFixtures\TeamCategoryFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\TeamFixture" class="App\DataFixtures\TeamFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\TeamFixture" class="App\DataFixtures\TeamFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\TestcaseFixture" class="App\DataFixtures\TestcaseFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\TestcaseFixture" class="App\DataFixtures\TestcaseFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\UserFixture" class="App\DataFixtures\UserFixture" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\UserFixture" class="App\DataFixtures\UserFixture" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ApiHeadersListener" class="App\EventListener\ApiHeadersListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\BodyTooBigListener" class="App\EventListener\BodyTooBigListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\ProfilerDisableListener" class="App\EventListener\ProfilerDisableListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\EventListener\UpdateUserRolesListener" class="App\EventListener\UpdateUserRolesListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\AbstractExternalIdEntityType" class="App\Form\Type\AbstractExternalIdEntityType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\BaylorCmsType" class="App\Form\Type\BaylorCmsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\BaylorCmsType" class="App\Form\Type\BaylorCmsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\BootstrapFileType" class="App\Form\Type\BootstrapFileType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestExportType" class="App\Form\Type\ContestExportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestImportType" class="App\Form\Type\ContestImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestProblemType" class="App\Form\Type\ContestProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ContestType" class="App\Form\Type\ContestType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExecutableType" class="App\Form\Type\ExecutableType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ExecutableUploadType" class="App\Form\Type\ExecutableUploadType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\FinalizeContestType" class="App\Form\Type\FinalizeContestType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\GeneratePasswordsType" class="App\Form\Type\GeneratePasswordsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JsonImportType" class="App\Form\Type\JsonImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JudgehostRestrictionType" class="App\Form\Type\JudgehostRestrictionType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JudgehostRestrictionType" class="App\Form\Type\JudgehostRestrictionType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JudgehostType" class="App\Form\Type\JudgehostType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\JudgehostsType" class="App\Form\Type\JudgehostsType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\LanguageType" class="App\Form\Type\LanguageType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\MinimalUserType" class="App\Form\Type\MinimalUserType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\MinimalUserType" class="App\Form\Type\MinimalUserType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\PrintType" class="App\Form\Type\PrintType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemType" class="App\Form\Type\ProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemUploadMultipleType" class="App\Form\Type\ProblemUploadMultipleType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemUploadMultipleType" class="App\Form\Type\ProblemUploadMultipleType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\ProblemUploadType" class="App\Form\Type\ProblemUploadType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RejudgingType" class="App\Form\Type\RejudgingType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\RemovedIntervalType" class="App\Form\Type\RemovedIntervalType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\SubmitProblemType" class="App\Form\Type\SubmitProblemType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamAffiliationType" class="App\Form\Type\TeamAffiliationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamCategoryType" class="App\Form\Type\TeamCategoryType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamClarificationType" class="App\Form\Type\TeamClarificationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TeamType" class="App\Form\Type\TeamType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\TsvImportType" class="App\Form\Type\TsvImportType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\UserRegistrationType" class="App\Form\Type\UserRegistrationType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\Type\UserType" class="App\Form\Type\UserType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Monolog\Processor\ProcessorInterface.0.App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Logger\VarargsLogMessageProcessor" class="App\Logger\VarargsLogMessageProcessor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Security\UserStateUpdater" class="App\Security\UserStateUpdater" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\ContestProblemVisitor" class="App\Serializer\ContestProblemVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\ContestVisitor" class="App\Serializer\ContestVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\SetExternalIdVisitor" class="App\Serializer\SetExternalIdVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.JMS\Serializer\EventDispatcher\EventSubscriberInterface.0.App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Serializer\SubmissionVisitor" class="App\Serializer\SubmissionVisitor" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Twig_ExtensionInterface.0.App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" abstract="true"/>
    <service id=".instanceof.Twig\Extension\ExtensionInterface.0.App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Twig\TwigExtension" class="App\Twig\TwigExtension" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\CountryValidator" class="App\Validator\Constraints\CountryValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\IdentifierValidator" class="App\Validator\Constraints\IdentifierValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Validator\ConstraintValidatorInterface.0.App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Validator\Constraints\TimeStringValidator" class="App\Validator\Constraints\TimeStringValidator" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service" id="container.env_var_processor"/>
        <argument key="bool" type="service" id="container.env_var_processor"/>
        <argument key="const" type="service" id="container.env_var_processor"/>
        <argument key="csv" type="service" id="container.env_var_processor"/>
        <argument key="default" type="service" id="container.env_var_processor"/>
        <argument key="file" type="service" id="container.env_var_processor"/>
        <argument key="float" type="service" id="container.env_var_processor"/>
        <argument key="int" type="service" id="container.env_var_processor"/>
        <argument key="json" type="service" id="container.env_var_processor"/>
        <argument key="key" type="service" id="container.env_var_processor"/>
        <argument key="query_string" type="service" id="container.env_var_processor"/>
        <argument key="require" type="service" id="container.env_var_processor"/>
        <argument key="resolve" type="service" id="container.env_var_processor"/>
        <argument key="string" type="service" id="container.env_var_processor"/>
        <argument key="trim" type="service" id="container.env_var_processor"/>
        <argument key="url" type="service" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_functional_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:functional-test"/>
      <argument type="service" id="maker.maker.make_functional_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:functional-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:message"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:message</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:messenger-middleware"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:reset-password"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_unit_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:unit-test"/>
      <argument type="service" id="maker.maker.make_unit_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:unit-test</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.bpvU51K" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
      </argument>
    </service>
    <service id=".service_locator.I3K77mT" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="nelmio_api_doc.model_describers.form" class="Nelmio\ApiDocBundle\ModelDescriber\FormModelDescriber" public="false">
      <tag name="nelmio_api_doc.model_describer" priority="100"/>
      <argument type="service" id="form.factory"/>
    </service>
    <service id="monolog.logger.doctrine" class="Symfony\Bridge\Monolog\Logger">
      <argument>doctrine</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.request" class="Symfony\Bridge\Monolog\Logger">
      <argument>request</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.console" class="Symfony\Bridge\Monolog\Logger">
      <argument>console</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.cache" class="Symfony\Bridge\Monolog\Logger">
      <argument>cache</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.http_client" class="Symfony\Bridge\Monolog\Logger">
      <argument>http_client</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.profiler" class="Symfony\Bridge\Monolog\Logger">
      <argument>profiler</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.php" class="Symfony\Bridge\Monolog\Logger">
      <argument>php</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.event" class="Symfony\Bridge\Monolog\Logger">
      <argument>event</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.null_internal"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.router" class="Symfony\Bridge\Monolog\Logger">
      <argument>router</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.security" class="Symfony\Bridge\Monolog\Logger">
      <argument>security</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.logger.debug" class="Symfony\Bridge\Monolog\Logger">
      <argument>debug</argument>
      <call method="pushProcessor">
        <argument type="service" id="debug.log_processor"/>
      </call>
      <call method="pushProcessor">
        <argument type="service" id="App\Logger\VarargsLogMessageProcessor"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.console"/>
      </call>
      <call method="pushHandler">
        <argument type="service" id="monolog.handler.main"/>
      </call>
      <configurator class="Symfony\Bundle\FrameworkBundle\DependencyInjection\Compiler\AddDebugLogProcessorPass" method="configureLogger"/>
    </service>
    <service id="monolog.handler.null_internal" class="Monolog\Handler\NullHandler"/>
    <service id=".service_locator.RGIiAl4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="viewhandler" type="service" id="fos_rest.view_handler.default"/>
      </argument>
    </service>
    <service id=".service_locator.MvM.OU2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="balloonService" type="service" id="App\Service\BalloonService"/>
      </argument>
    </service>
    <service id=".service_locator.ZgQelA_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
        <argument key="metadataFactory" type="service" id="jms_serializer.metadata_factory"/>
      </argument>
    </service>
    <service id=".service_locator.l0q8yB1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="team" type="service" id=".errored..service_locator.l0q8yB1.App\Entity\Team"/>
      </argument>
    </service>
    <service id=".service_locator.T2eog9f" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="problem" type="service" id=".errored..service_locator.T2eog9f.App\Entity\Problem"/>
      </argument>
    </service>
    <service id=".service_locator.9o13o2t" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="assetPackage" type="service" id="assets.packages"/>
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.MQVPglR" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventLogService" type="service" id="App\Service\EventLogService"/>
      </argument>
    </service>
    <service id=".service_locator.q_Wr7A9" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.txdsDGI" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.Rj.dpkA" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="scoreboardService" type="service" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".service_locator.jTr0Zge" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="assetPackage" type="service" id="assets.packages"/>
      </argument>
    </service>
    <service id=".service_locator.BYSm76M" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="submissionService" type="service" id="App\Service\SubmissionService"/>
      </argument>
    </service>
    <service id=".service_locator.1qpuAO7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="zip" type="service" id=".errored..service_locator.1qpuAO7.ZipArchive"/>
      </argument>
    </service>
    <service id=".service_locator.CXXDzUF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore"/>
        <argument key="rejudgingService" type="service" id="App\Service\RejudgingService"/>
      </argument>
    </service>
    <service id=".service_locator.p8zqwCr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="formFactory" type="service" id="form.factory"/>
      </argument>
    </service>
    <service id=".service_locator.CNuhiBt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="jid" type="service" id=".errored..service_locator.CNuhiBt.App\Entity\Judging"/>
      </argument>
    </service>
    <service id=".service_locator.cTjBXfv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="externalJudgement" type="service" id=".errored..service_locator.cTjBXfv.App\Entity\ExternalJudgement"/>
      </argument>
    </service>
    <service id=".service_locator.WgjgUIw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="contest" type="service" id=".errored..service_locator.WgjgUIw.App\Entity\Contest"/>
        <argument key="run" type="service" id=".errored..service_locator.WgjgUIw.App\Entity\JudgingRun"/>
        <argument key="submission" type="service" id=".errored..service_locator.WgjgUIw.App\Entity\Submission"/>
      </argument>
    </service>
    <service id=".service_locator.LvruMW1" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="submission" type="service" id=".errored..service_locator.LvruMW1.App\Entity\Submission"/>
      </argument>
    </service>
    <service id=".service_locator.PAVHXNH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="eventLogService" type="service" id="App\Service\EventLogService"/>
        <argument key="scoreboardService" type="service" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".service_locator.HMk3bPr" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="balloonService" type="service" id="App\Service\BalloonService"/>
        <argument key="eventLogService" type="service" id="App\Service\EventLogService"/>
        <argument key="scoreboardService" type="service" id="App\Service\ScoreboardService"/>
      </argument>
    </service>
    <service id=".value.zrvvYJt" class="mixed">
      <argument type="collection">
        <argument>/domjudge/webapp</argument>
      </argument>
      <factory function="current"/>
    </service>
    <service id=".service_locator.KfKO9Zc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="assetPackage" type="service" id="assets.packages"/>
        <argument key="projectDir" type="service" id=".value.zrvvYJt"/>
      </argument>
    </service>
    <service id=".service_locator.xUb9Fy2" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="scoreboardService" type="service" id="App\Service\ScoreboardService"/>
        <argument key="submissionService" type="service" id="App\Service\SubmissionService"/>
      </argument>
    </service>
    <service id=".service_locator.K5T7NwO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authorizationChecker" type="service" id="security.authorization_checker"/>
      </argument>
    </service>
    <service id=".service_locator.h9JKdcv" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authUtils" type="service" id="security.authentication_utils"/>
        <argument key="authorizationChecker" type="service" id="security.authorization_checker"/>
      </argument>
    </service>
    <service id=".service_locator.ABJ9AL6" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="authorizationChecker" type="service" id="security.authorization_checker"/>
        <argument key="passwordEncoder" type="service" id="security.user_password_encoder.generic"/>
      </argument>
    </service>
    <service id=".service_locator.HIu5b0X" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\API\AwardsController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\BalloonController::listAction" type="service" id=".service_locator.MvM.OU2"/>
        <argument key="App\Controller\API\BalloonController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ClarificationController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ContestController::getEventFeedAction" type="service" id=".service_locator.ZgQelA_"/>
        <argument key="App\Controller\API\ContestController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ExecutableController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\GeneralInfoController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\GroupController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgehostController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgementController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgementTypeController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\LanguageController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\OrganizationController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ProblemController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\RunController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ScoreboardController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\SubmissionController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\TeamController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\TestcaseController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\UserController::setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\Jury\AnalysisController::problemAction" type="service" id=".service_locator.T2eog9f"/>
        <argument key="App\Controller\Jury\AnalysisController::teamAction" type="service" id=".service_locator.l0q8yB1"/>
        <argument key="App\Controller\Jury\AuditLogController::indexAction" type="service" id=".service_locator.9o13o2t"/>
        <argument key="App\Controller\Jury\BalloonController::indexAction" type="service" id=".service_locator.MvM.OU2"/>
        <argument key="App\Controller\Jury\ConfigController::indexAction" type="service" id=".service_locator.MQVPglR"/>
        <argument key="App\Controller\Jury\ContestController::indexAction" type="service" id=".service_locator.q_Wr7A9"/>
        <argument key="App\Controller\Jury\JudgehostController::activateAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JudgehostController::deactivateAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JuryMiscController::changeContestAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JuryMiscController::refreshCacheAction" type="service" id=".service_locator.Rj.dpkA"/>
        <argument key="App\Controller\Jury\LanguageController::indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\LanguageController::viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\ProblemController::addTestcasesToZip" type="service" id=".service_locator.1qpuAO7"/>
        <argument key="App\Controller\Jury\ProblemController::viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\RejudgingController::addAction" type="service" id=".service_locator.p8zqwCr"/>
        <argument key="App\Controller\Jury\RejudgingController::finishAction" type="service" id=".service_locator.CXXDzUF"/>
        <argument key="App\Controller\Jury\RejudgingController::viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\SubmissionController::editSourceAction" type="service" id=".service_locator.LvruMW1"/>
        <argument key="App\Controller\Jury\SubmissionController::sourceAction" type="service" id=".service_locator.LvruMW1"/>
        <argument key="App\Controller\Jury\SubmissionController::teamOutputAction" type="service" id=".service_locator.WgjgUIw"/>
        <argument key="App\Controller\Jury\SubmissionController::updateStatusAction" type="service" id=".service_locator.PAVHXNH"/>
        <argument key="App\Controller\Jury\SubmissionController::verifyAction" type="service" id=".service_locator.HMk3bPr"/>
        <argument key="App\Controller\Jury\SubmissionController::verifyShadowDifferenceAction" type="service" id=".service_locator.MQVPglR"/>
        <argument key="App\Controller\Jury\SubmissionController::viewForExternalJudgementAction" type="service" id=".service_locator.cTjBXfv"/>
        <argument key="App\Controller\Jury\SubmissionController::viewForJudgingAction" type="service" id=".service_locator.CNuhiBt"/>
        <argument key="App\Controller\Jury\TeamAffiliationController::indexAction" type="service" id=".service_locator.KfKO9Zc"/>
        <argument key="App\Controller\Jury\TeamAffiliationController::viewAction" type="service" id=".service_locator.Rj.dpkA"/>
        <argument key="App\Controller\Jury\TeamCategoryController::indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\TeamCategoryController::viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\TeamController::indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\TeamController::viewAction" type="service" id=".service_locator.xUb9Fy2"/>
        <argument key="App\Controller\PublicController::changeContestAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\RootController::redirectAction" type="service" id=".service_locator.K5T7NwO"/>
        <argument key="App\Controller\SecurityController::loginAction" type="service" id=".service_locator.h9JKdcv"/>
        <argument key="App\Controller\SecurityController::registerAction" type="service" id=".service_locator.ABJ9AL6"/>
        <argument key="App\Controller\Team\MiscController::changeContestAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\API\AwardsController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\BalloonController:listAction" type="service" id=".service_locator.MvM.OU2"/>
        <argument key="App\Controller\API\BalloonController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ClarificationController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ContestController:getEventFeedAction" type="service" id=".service_locator.ZgQelA_"/>
        <argument key="App\Controller\API\ContestController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ExecutableController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\GeneralInfoController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\GroupController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgehostController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgementController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\JudgementTypeController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\LanguageController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\OrganizationController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ProblemController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\RunController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\ScoreboardController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\SubmissionController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\TeamController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\TestcaseController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\API\UserController:setViewHandler" type="service" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\Jury\AnalysisController:problemAction" type="service" id=".service_locator.T2eog9f"/>
        <argument key="App\Controller\Jury\AnalysisController:teamAction" type="service" id=".service_locator.l0q8yB1"/>
        <argument key="App\Controller\Jury\AuditLogController:indexAction" type="service" id=".service_locator.9o13o2t"/>
        <argument key="App\Controller\Jury\BalloonController:indexAction" type="service" id=".service_locator.MvM.OU2"/>
        <argument key="App\Controller\Jury\ConfigController:indexAction" type="service" id=".service_locator.MQVPglR"/>
        <argument key="App\Controller\Jury\ContestController:indexAction" type="service" id=".service_locator.q_Wr7A9"/>
        <argument key="App\Controller\Jury\JudgehostController:activateAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JudgehostController:deactivateAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JuryMiscController:changeContestAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\Jury\JuryMiscController:refreshCacheAction" type="service" id=".service_locator.Rj.dpkA"/>
        <argument key="App\Controller\Jury\LanguageController:indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\LanguageController:viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\ProblemController:addTestcasesToZip" type="service" id=".service_locator.1qpuAO7"/>
        <argument key="App\Controller\Jury\ProblemController:viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\RejudgingController:addAction" type="service" id=".service_locator.p8zqwCr"/>
        <argument key="App\Controller\Jury\RejudgingController:finishAction" type="service" id=".service_locator.CXXDzUF"/>
        <argument key="App\Controller\Jury\RejudgingController:viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\SubmissionController:editSourceAction" type="service" id=".service_locator.LvruMW1"/>
        <argument key="App\Controller\Jury\SubmissionController:sourceAction" type="service" id=".service_locator.LvruMW1"/>
        <argument key="App\Controller\Jury\SubmissionController:teamOutputAction" type="service" id=".service_locator.WgjgUIw"/>
        <argument key="App\Controller\Jury\SubmissionController:updateStatusAction" type="service" id=".service_locator.PAVHXNH"/>
        <argument key="App\Controller\Jury\SubmissionController:verifyAction" type="service" id=".service_locator.HMk3bPr"/>
        <argument key="App\Controller\Jury\SubmissionController:verifyShadowDifferenceAction" type="service" id=".service_locator.MQVPglR"/>
        <argument key="App\Controller\Jury\SubmissionController:viewForExternalJudgementAction" type="service" id=".service_locator.cTjBXfv"/>
        <argument key="App\Controller\Jury\SubmissionController:viewForJudgingAction" type="service" id=".service_locator.CNuhiBt"/>
        <argument key="App\Controller\Jury\TeamAffiliationController:indexAction" type="service" id=".service_locator.KfKO9Zc"/>
        <argument key="App\Controller\Jury\TeamAffiliationController:viewAction" type="service" id=".service_locator.Rj.dpkA"/>
        <argument key="App\Controller\Jury\TeamCategoryController:indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\TeamCategoryController:viewAction" type="service" id=".service_locator.BYSm76M"/>
        <argument key="App\Controller\Jury\TeamController:indexAction" type="service" id=".service_locator.jTr0Zge"/>
        <argument key="App\Controller\Jury\TeamController:viewAction" type="service" id=".service_locator.xUb9Fy2"/>
        <argument key="App\Controller\PublicController:changeContestAction" type="service" id=".service_locator.txdsDGI"/>
        <argument key="App\Controller\RootController:redirectAction" type="service" id=".service_locator.K5T7NwO"/>
        <argument key="App\Controller\SecurityController:loginAction" type="service" id=".service_locator.h9JKdcv"/>
        <argument key="App\Controller\SecurityController:registerAction" type="service" id=".service_locator.ABJ9AL6"/>
        <argument key="App\Controller\Team\MiscController:changeContestAction" type="service" id=".service_locator.txdsDGI"/>
      </argument>
    </service>
    <service id=".service_locator.wM3zFPK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Validator\Constraints\CountryValidator" type="service" id="App\Validator\Constraints\CountryValidator"/>
        <argument key="App\Validator\Constraints\IdentifierValidator" type="service" id="App\Validator\Constraints\IdentifierValidator"/>
        <argument key="App\Validator\Constraints\TimeStringValidator" type="service" id="App\Validator\Constraints\TimeStringValidator"/>
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator.D1Oy4Sg" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="hinclude" type="service" id="fragment.renderer.hinclude"/>
        <argument key="inline" type="service" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.mkcAsqc" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\Type\AbstractExternalIdEntityType" type="service" id="App\Form\Type\AbstractExternalIdEntityType"/>
        <argument key="App\Form\Type\BaylorCmsType" type="service" id="App\Form\Type\BaylorCmsType"/>
        <argument key="App\Form\Type\BootstrapFileType" type="service" id="App\Form\Type\BootstrapFileType"/>
        <argument key="App\Form\Type\ContestExportType" type="service" id="App\Form\Type\ContestExportType"/>
        <argument key="App\Form\Type\ContestImportType" type="service" id="App\Form\Type\ContestImportType"/>
        <argument key="App\Form\Type\ContestProblemType" type="service" id="App\Form\Type\ContestProblemType"/>
        <argument key="App\Form\Type\ContestType" type="service" id="App\Form\Type\ContestType"/>
        <argument key="App\Form\Type\ExecutableType" type="service" id="App\Form\Type\ExecutableType"/>
        <argument key="App\Form\Type\ExecutableUploadType" type="service" id="App\Form\Type\ExecutableUploadType"/>
        <argument key="App\Form\Type\FinalizeContestType" type="service" id="App\Form\Type\FinalizeContestType"/>
        <argument key="App\Form\Type\GeneratePasswordsType" type="service" id="App\Form\Type\GeneratePasswordsType"/>
        <argument key="App\Form\Type\JsonImportType" type="service" id="App\Form\Type\JsonImportType"/>
        <argument key="App\Form\Type\JudgehostRestrictionType" type="service" id="App\Form\Type\JudgehostRestrictionType"/>
        <argument key="App\Form\Type\JudgehostType" type="service" id="App\Form\Type\JudgehostType"/>
        <argument key="App\Form\Type\JudgehostsType" type="service" id="App\Form\Type\JudgehostsType"/>
        <argument key="App\Form\Type\LanguageType" type="service" id="App\Form\Type\LanguageType"/>
        <argument key="App\Form\Type\MinimalUserType" type="service" id="App\Form\Type\MinimalUserType"/>
        <argument key="App\Form\Type\PrintType" type="service" id="App\Form\Type\PrintType"/>
        <argument key="App\Form\Type\ProblemType" type="service" id="App\Form\Type\ProblemType"/>
        <argument key="App\Form\Type\ProblemUploadMultipleType" type="service" id="App\Form\Type\ProblemUploadMultipleType"/>
        <argument key="App\Form\Type\ProblemUploadType" type="service" id="App\Form\Type\ProblemUploadType"/>
        <argument key="App\Form\Type\RejudgingType" type="service" id="App\Form\Type\RejudgingType"/>
        <argument key="App\Form\Type\RemovedIntervalType" type="service" id="App\Form\Type\RemovedIntervalType"/>
        <argument key="App\Form\Type\SubmitProblemType" type="service" id="App\Form\Type\SubmitProblemType"/>
        <argument key="App\Form\Type\TeamAffiliationType" type="service" id="App\Form\Type\TeamAffiliationType"/>
        <argument key="App\Form\Type\TeamCategoryType" type="service" id="App\Form\Type\TeamCategoryType"/>
        <argument key="App\Form\Type\TeamClarificationType" type="service" id="App\Form\Type\TeamClarificationType"/>
        <argument key="App\Form\Type\TeamType" type="service" id="App\Form\Type\TeamType"/>
        <argument key="App\Form\Type\TsvImportType" type="service" id="App\Form\Type\TsvImportType"/>
        <argument key="App\Form\Type\UserRegistrationType" type="service" id="App\Form\Type\UserRegistrationType"/>
        <argument key="App\Form\Type\UserType" type="service" id="App\Form\Type\UserType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service" id="form.type.form"/>
      </argument>
    </service>
    <service id=".debug.http_client" class="Symfony\Component\HttpClient\TraceableHttpClient">
      <tag name="monolog.logger" channel="http_client"/>
      <tag name="http_client.client"/>
      <argument type="service" id=".debug.http_client.inner"/>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.role_hierarchy_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.role_hierarchy_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler" class="FOS\RestBundle\Serializer\Normalizer\FormErrorHandler">
      <tag name="jms_serializer.subscribing_handler"/>
      <argument type="service" id="fos_rest.serializer.form_error_handler.inner"/>
    </service>
    <service id=".service_locator.qEc7vUD" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="fos_rest.view_handler" type="service" id="fos_rest.view_handler.default"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\AwardsController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\AwardsController"/>
      <argument>App\Controller\API\AwardsController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\BalloonController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\BalloonController"/>
      <argument>App\Controller\API\BalloonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\ClarificationController"/>
      <argument>App\Controller\API\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\ContestController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\ContestController"/>
      <argument>App\Controller\API\ContestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\ExecutableController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\ExecutableController"/>
      <argument>App\Controller\API\ExecutableController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\GeneralInfoController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\GeneralInfoController"/>
      <argument>App\Controller\API\GeneralInfoController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\GroupController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\GroupController"/>
      <argument>App\Controller\API\GroupController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\JudgehostController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgehostController"/>
      <argument>App\Controller\API\JudgehostController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\JudgementController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgementController"/>
      <argument>App\Controller\API\JudgementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\JudgementTypeController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\JudgementTypeController"/>
      <argument>App\Controller\API\JudgementTypeController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\LanguageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\LanguageController"/>
      <argument>App\Controller\API\LanguageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\OrganizationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\OrganizationController"/>
      <argument>App\Controller\API\OrganizationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\ProblemController"/>
      <argument>App\Controller\API\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\RunController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\RunController"/>
      <argument>App\Controller\API\RunController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\ScoreboardController"/>
      <argument>App\Controller\API\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\SubmissionController"/>
      <argument>App\Controller\API\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\TeamController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\TeamController"/>
      <argument>App\Controller\API\TeamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\TestcaseController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\TestcaseController"/>
      <argument>App\Controller\API\TestcaseController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.qEc7vUD.App\Controller\API\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\API\UserController"/>
      <argument>App\Controller\API\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.qEc7vUD" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\AnalysisController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\AnalysisController"/>
      <argument>App\Controller\Jury\AnalysisController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\AuditLogController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\AuditLogController"/>
      <argument>App\Controller\Jury\AuditLogController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\BalloonController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\BalloonController"/>
      <argument>App\Controller\Jury\BalloonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ClarificationController"/>
      <argument>App\Controller\Jury\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ConfigController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ConfigController"/>
      <argument>App\Controller\Jury\ConfigController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ContestController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ContestController"/>
      <argument>App\Controller\Jury\ContestController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ExecutableController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ExecutableController"/>
      <argument>App\Controller\Jury\ExecutableController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ImportExportController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ImportExportController"/>
      <argument>App\Controller\Jury\ImportExportController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\InternalErrorController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\InternalErrorController"/>
      <argument>App\Controller\Jury\InternalErrorController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\JudgehostController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\JudgehostController"/>
      <argument>App\Controller\Jury\JudgehostController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\JudgehostRestrictionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\JudgehostRestrictionController"/>
      <argument>App\Controller\Jury\JudgehostRestrictionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\JuryMiscController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\JuryMiscController"/>
      <argument>App\Controller\Jury\JuryMiscController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\LanguageController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\LanguageController"/>
      <argument>App\Controller\Jury\LanguageController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\PrintController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\PrintController"/>
      <argument>App\Controller\Jury\PrintController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ProblemController"/>
      <argument>App\Controller\Jury\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\RejudgingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\RejudgingController"/>
      <argument>App\Controller\Jury\RejudgingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ScoreboardController"/>
      <argument>App\Controller\Jury\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\ShadowDifferencesController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\ShadowDifferencesController"/>
      <argument>App\Controller\Jury\ShadowDifferencesController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\SubmissionController"/>
      <argument>App\Controller\Jury\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.KTdd2i_" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.KTdd2i_.App\Controller\Jury\TeamAffiliationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamAffiliationController"/>
      <argument>App\Controller\Jury\TeamAffiliationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.KTdd2i_" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\TeamCategoryController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamCategoryController"/>
      <argument>App\Controller\Jury\TeamCategoryController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\TeamController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\TeamController"/>
      <argument>App\Controller\Jury\TeamController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Jury\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Jury\UserController"/>
      <argument>App\Controller\Jury\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\PublicController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\PublicController"/>
      <argument>App\Controller\PublicController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\RootController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\RootController"/>
      <argument>App\Controller\RootController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SecurityController"/>
      <argument>App\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Team\ClarificationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Team\ClarificationController"/>
      <argument>App\Controller\Team\ClarificationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Team\MiscController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Team\MiscController"/>
      <argument>App\Controller\Team\MiscController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Team\ProblemController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Team\ProblemController"/>
      <argument>App\Controller\Team\ProblemController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Team\ScoreboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Team\ScoreboardController"/>
      <argument>App\Controller\Team\ScoreboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.rsQA3TH.App\Controller\Team\SubmissionController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Team\SubmissionController"/>
      <argument>App\Controller\Team\SubmissionController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.rsQA3TH" method="withContext"/>
    </service>
    <service id=".service_locator.1R6MOG0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.1R6MOG0.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.1R6MOG0" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.o9nGMXB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.o9nGMXB.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.o9nGMXB" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Bppmeg3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="request_stack" type="service" id="request_stack"/>
        <argument key="session" type="service" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service" id="session.storage.native" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XwZNkPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="monolog.logger.request" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.role_hierarchy_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="var_dumper.contextualized_cli_dumper.inner" class="Symfony\Component\VarDumper\Dumper\CliDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>0</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
        </argument>
      </call>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.HIu5b0X"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.HIu5b0X"/>
    </service>
    <service id=".debug.http_client.inner" class="Symfony\Contracts\HttpClient\HttpClientInterface" public="false">
      <argument type="collection"/>
      <argument>6</argument>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.http_client" on-invalid="ignore"/>
      </call>
      <factory class="Symfony\Component\HttpClient\HttpClient" method="create"/>
    </service>
    <service id="fos_rest.serializer.form_error_handler.inner" class="JMS\Serializer\Handler\FormErrorHandler" public="false">
      <argument>null</argument>
      <argument>validators</argument>
    </service>
    <service id=".errored..service_locator.l0q8yB1.App\Entity\Team" class="App\Entity\Team"/>
    <service id=".errored..service_locator.T2eog9f.App\Entity\Problem" class="App\Entity\Problem"/>
    <service id=".errored..service_locator.1qpuAO7.ZipArchive" class="ZipArchive"/>
    <service id=".errored..service_locator.CNuhiBt.App\Entity\Judging" class="App\Entity\Judging"/>
    <service id=".errored..service_locator.cTjBXfv.App\Entity\ExternalJudgement" class="App\Entity\ExternalJudgement"/>
    <service id=".errored..service_locator.WgjgUIw.App\Entity\Contest" class="App\Entity\Contest"/>
    <service id=".errored..service_locator.WgjgUIw.App\Entity\JudgingRun" class="App\Entity\JudgingRun"/>
    <service id=".errored..service_locator.WgjgUIw.App\Entity\Submission" class="App\Entity\Submission"/>
    <service id=".errored..service_locator.LvruMW1.App\Entity\Submission" class="App\Entity\Submission"/>
    <service id=".service_locator.OtWgGj5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Serializer\ContestProblemVisitor" type="service" id="App\Serializer\ContestProblemVisitor"/>
        <argument key="App\Serializer\ContestVisitor" type="service" id="App\Serializer\ContestVisitor"/>
        <argument key="App\Serializer\SetExternalIdVisitor" type="service" id="App\Serializer\SetExternalIdVisitor"/>
        <argument key="App\Serializer\SubmissionVisitor" type="service" id="App\Serializer\SubmissionVisitor"/>
        <argument key="jms_serializer.doctrine_proxy_subscriber" type="service" id="jms_serializer.doctrine_proxy_subscriber"/>
        <argument key="jms_serializer.stopwatch_subscriber" type="service" id="jms_serializer.stopwatch_subscriber"/>
      </argument>
    </service>
    <service id=".service_locator.91HGn7z" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="fos_rest.serializer.exception_normalizer.jms" type="service" id="fos_rest.serializer.exception_normalizer.jms"/>
        <argument key="fos_rest.serializer.form_error_handler" type="service" id="fos_rest.serializer.form_error_handler"/>
        <argument key="jms_serializer.array_collection_handler" type="service" id="jms_serializer.array_collection_handler"/>
        <argument key="jms_serializer.constraint_violation_handler" type="service" id="jms_serializer.constraint_violation_handler"/>
        <argument key="jms_serializer.datetime_handler" type="service" id="jms_serializer.datetime_handler"/>
        <argument key="jms_serializer.iterator_handler" type="service" id="jms_serializer.iterator_handler"/>
      </argument>
    </service>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.EI9OjJL"/>
      <argument type="collection">
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="server:dump">var_dumper.command.server_dump</argument>
        <argument key="server:log">monolog.command.server_log</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:functional-test">maker.auto_command.make_functional_test</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:unit-test">maker.auto_command.make_unit_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.EI9OjJL" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="console.command.about" type="service" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service" id="console.command.secrets_set"/>
        <argument key="console.command.yaml_lint" type="service" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.diff_command" type="service" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service" id="doctrine_migrations.version_command"/>
        <argument key="maker.auto_command.make_auth" type="service" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_entity" type="service" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_functional_test" type="service" id="maker.auto_command.make_functional_test"/>
        <argument key="maker.auto_command.make_message" type="service" id="maker.auto_command.make_message"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service" id="maker.auto_command.make_messenger_middleware"/>
        <argument key="maker.auto_command.make_migration" type="service" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_reset_password" type="service" id="maker.auto_command.make_reset_password"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_twig_extension" type="service" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_unit_test" type="service" id="maker.auto_command.make_unit_test"/>
        <argument key="maker.auto_command.make_user" type="service" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service" id="maker.auto_command.make_voter"/>
        <argument key="monolog.command.server_log" type="service" id="monolog.command.server_log"/>
        <argument key="security.command.user_password_encoder" type="service" id="security.command.user_password_encoder"/>
        <argument key="twig.command.debug" type="service" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service" id="twig.command.lint"/>
        <argument key="var_dumper.command.server_dump" type="service" id="var_dumper.command.server_dump"/>
      </argument>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>jfZ4WaCYLW</argument>
      <argument>0</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>cvojvSVRAB</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>ANpitLhX-k</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>E0MjpYxgc6</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Tau728p5xw</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>FcdFtjC8+n</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>cAG3s+Rk5Q</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>/domjudge/webapp/var/cache/dev/pools</argument>
      <argument type="service" id="monolog.logger.cache" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.7puFXBj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="JMS\Serializer\Twig\SerializerRuntimeHelper" type="service" id="jms_serializer.twig_extension.serializer_runtime_helper"/>
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="Metadata\MetadataFactoryInterface" alias="jms_serializer.metadata_factory"/>
    <service id="Symfony\Component\HttpKernel\Profiler\Profiler" alias="profiler"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="jms_serializer.metadata_driver" alias="jms_serializer.metadata.doctrine_type_driver" public="true"/>
    <service id="jms_serializer.metadata.cache" alias="jms_serializer.metadata.cache.file_cache" public="false"/>
    <service id="jms_serializer.naming_strategy" alias="jms_serializer.serialized_name_annotation_strategy" public="false"/>
    <service id="jms_serializer.object_constructor" alias="jms_serializer.doctrine_object_constructor" public="true"/>
    <service id="jms_serializer.deserialization_context_factory" alias="jms_serializer.configured_deserialization_context_factory" public="true"/>
    <service id="jms_serializer.serialization_context_factory" alias="jms_serializer.configured_serialization_context_factory" public="true"/>
    <service id="jms_serializer" alias="jms_serializer.serializer" public="true"/>
    <service id="JMS\Serializer\SerializerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="JMS\Serializer\ArrayTransformerInterface" alias="jms_serializer.serializer" public="false"/>
    <service id="jms_serializer.accessor_strategy" alias="jms_serializer.accessor_strategy.default" public="false"/>
    <service id="JMS\Serializer\ContextFactory\SerializationContextFactoryInterface" alias="jms_serializer.configured_serialization_context_factory" public="false"/>
    <service id="JMS\Serializer\ContextFactory\DeserializationContextFactoryInterface" alias="jms_serializer.configured_deserialization_context_factory" public="false"/>
    <service id="nelmio_api_doc.generator" alias="nelmio_api_doc.generator.default" public="true"/>
    <service id="sensio_framework_extra.converter.doctrine.orm.expression_language" alias="sensio_framework_extra.converter.doctrine.orm.expression_language.default" public="false"/>
    <service id="sensio_framework_extra.security.expression_language" alias="sensio_framework_extra.security.expression_language.default" public="false"/>
    <service id="logger" alias="monolog.logger"/>
    <service id="Psr\Log\LoggerInterface" alias="monolog.logger" public="false"/>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="twig.error_renderer.html"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Contracts\HttpClient\HttpClientInterface" alias=".debug.http_client"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.domjudge_db_provider"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="App\Security\UserChecker" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="App\Security\UserChecker" public="false"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.router" alias="router.default"/>
    <service id="fos_rest.templating" alias="twig"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="fos_rest.inflector" alias="fos_rest.inflector.doctrine"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="Psr\Log\LoggerInterface $doctrineLogger" alias="monolog.logger.doctrine"/>
    <service id="Psr\Log\LoggerInterface $requestLogger" alias="monolog.logger.request"/>
    <service id="Psr\Log\LoggerInterface $consoleLogger" alias="monolog.logger.console"/>
    <service id="Psr\Log\LoggerInterface $cacheLogger" alias="monolog.logger.cache"/>
    <service id="Psr\Log\LoggerInterface $httpClientLogger" alias="monolog.logger.http_client"/>
    <service id="Psr\Log\LoggerInterface $profilerLogger" alias="monolog.logger.profiler"/>
    <service id="Psr\Log\LoggerInterface $phpLogger" alias="monolog.logger.php"/>
    <service id="Psr\Log\LoggerInterface $eventLogger" alias="monolog.logger.event"/>
    <service id="Psr\Log\LoggerInterface $routerLogger" alias="monolog.logger.router"/>
    <service id="Psr\Log\LoggerInterface $securityLogger" alias="monolog.logger.security"/>
    <service id="Psr\Log\LoggerInterface $debugLogger" alias="monolog.logger.debug"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.HIu5b0X"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.jms"/>
    <service id=".service_locator.cVnxr8a" alias="nelmio_api_doc.generator_locator" public="false"/>
    <service id=".service_locator.WtXLyw3" alias=".service_locator.wM3zFPK" public="false"/>
    <service id=".service_locator.04HWgXZ" alias=".service_locator.qEc7vUD" public="false"/>
    <service id=".service_locator.hwiYr7r" alias=".service_locator.rsQA3TH" public="false"/>
    <service id=".service_locator.iu5fh9a" alias=".service_locator.KTdd2i_" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="var_dumper.cli_dumper" alias="var_dumper.contextualized_cli_dumper" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="http_client" alias=".debug.http_client"/>
    <service id="jms_serializer.form_error_handler" alias="fos_rest.serializer.form_error_handler" public="false"/>
    <service id="console.command.public_alias.App\Command\CheckDatabaseConfigurationDefaultValuesCommand" alias="App\Command\CheckDatabaseConfigurationDefaultValuesCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ImportEventFeedCommand" alias="App\Command\ImportEventFeedCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\LoadExampleDataCommand" alias="App\Command\LoadExampleDataCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ResetUserPasswordCommand" alias="App\Command\ResetUserPasswordCommand" public="true"/>
    <service id="console.command.public_alias.App\Command\ScoreboardMergeCommand" alias="App\Command\ScoreboardMergeCommand" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.contains_command" alias="doctrine_cache.contains_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.delete_command" alias="doctrine_cache.delete_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.flush_command" alias="doctrine_cache.flush_command" public="true"/>
    <service id="console.command.public_alias.doctrine_cache.stats_command" alias="doctrine_cache.stats_command" public="true"/>
    <service id="fos_rest.serializer.jms_handler_registry" alias="jms_serializer.handler_registry" public="true"/>
  </services>
</container>
