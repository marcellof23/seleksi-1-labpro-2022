<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Contest extends \App\Entity\Contest implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'cid', 'externalid', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'shortname', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'activatetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttimeEnabled', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'freezetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'endtime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'unfreezetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'finalizetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'finalizecomment', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'b', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'deactivatetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'activatetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'freezetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'endtimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'unfreezetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'deactivatetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'processBalloons', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'public', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'openToAllTeams', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'teams', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'team_categories', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'clarifications', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'submissions', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'problems', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'internal_errors', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'removedIntervals'];
        }

        return ['__isInitialized__', 'cid', 'externalid', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'shortname', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'activatetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttimeEnabled', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'freezetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'endtime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'unfreezetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'finalizetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'finalizecomment', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'b', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'deactivatetime', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'activatetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'starttimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'freezetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'endtimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'unfreezetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'deactivatetimeString', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'processBalloons', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'public', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'openToAllTeams', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'teams', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'team_categories', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'clarifications', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'submissions', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'problems', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'internal_errors', '' . "\0" . 'App\\Entity\\Contest' . "\0" . 'removedIntervals'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Contest $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getCid()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getCid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCid', []);

        return parent::getCid();
    }

    /**
     * {@inheritDoc}
     */
    public function setExternalid($externalid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExternalid', [$externalid]);

        return parent::setExternalid($externalid);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalid', []);

        return parent::getExternalid();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setShortname($shortname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setShortname', [$shortname]);

        return parent::setShortname($shortname);
    }

    /**
     * {@inheritDoc}
     */
    public function getShortname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getShortname', []);

        return parent::getShortname();
    }

    /**
     * {@inheritDoc}
     */
    public function getActivatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivatetime', []);

        return parent::getActivatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttime($starttime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttime', [$starttime]);

        return parent::setStarttime($starttime);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttime(bool $nullWhenDisabled = true)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttime', [$nullWhenDisabled]);

        return parent::getStarttime($nullWhenDisabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getStartTimeObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStartTimeObject', []);

        return parent::getStartTimeObject();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttimeEnabled($starttimeEnabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttimeEnabled', [$starttimeEnabled]);

        return parent::setStarttimeEnabled($starttimeEnabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttimeEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttimeEnabled', []);

        return parent::getStarttimeEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function getFreezetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreezetime', []);

        return parent::getFreezetime();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndtime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndtime', []);

        return parent::getEndtime();
    }

    /**
     * {@inheritDoc}
     */
    public function getEndTimeObject()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndTimeObject', []);

        return parent::getEndTimeObject();
    }

    /**
     * {@inheritDoc}
     */
    public function getUnfreezetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnfreezetime', []);

        return parent::getUnfreezetime();
    }

    /**
     * {@inheritDoc}
     */
    public function getFinalizetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinalizetime', []);

        return parent::getFinalizetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinalizetime($finalizetimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinalizetime', [$finalizetimeString]);

        return parent::setFinalizetime($finalizetimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getFinalizecomment()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFinalizecomment', []);

        return parent::getFinalizecomment();
    }

    /**
     * {@inheritDoc}
     */
    public function setFinalizecomment($finalizecomment)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFinalizecomment', [$finalizecomment]);

        return parent::setFinalizecomment($finalizecomment);
    }

    /**
     * {@inheritDoc}
     */
    public function getB()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getB', []);

        return parent::getB();
    }

    /**
     * {@inheritDoc}
     */
    public function setB($b)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setB', [$b]);

        return parent::setB($b);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeactivatetime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeactivatetime', []);

        return parent::getDeactivatetime();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivatetimeString($activatetimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivatetimeString', [$activatetimeString]);

        return parent::setActivatetimeString($activatetimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivatetimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivatetimeString', []);

        return parent::getActivatetimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setStarttimeString($starttimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStarttimeString', [$starttimeString]);

        return parent::setStarttimeString($starttimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getStarttimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStarttimeString', []);

        return parent::getStarttimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setFreezetimeString($freezetimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreezetimeString', [$freezetimeString]);

        return parent::setFreezetimeString($freezetimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getFreezetimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreezetimeString', []);

        return parent::getFreezetimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setEndtimeString($endtimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndtimeString', [$endtimeString]);

        return parent::setEndtimeString($endtimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getEndtimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEndtimeString', []);

        return parent::getEndtimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setUnfreezetimeString($unfreezetimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnfreezetimeString', [$unfreezetimeString]);

        return parent::setUnfreezetimeString($unfreezetimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnfreezetimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnfreezetimeString', []);

        return parent::getUnfreezetimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeactivatetimeString($deactivatetimeString)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeactivatetimeString', [$deactivatetimeString]);

        return parent::setDeactivatetimeString($deactivatetimeString);
    }

    /**
     * {@inheritDoc}
     */
    public function getDeactivatetimeString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDeactivatetimeString', []);

        return parent::getDeactivatetimeString();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivatetime($activatetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivatetime', [$activatetime]);

        return parent::setActivatetime($activatetime);
    }

    /**
     * {@inheritDoc}
     */
    public function setFreezetime($freezetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFreezetime', [$freezetime]);

        return parent::setFreezetime($freezetime);
    }

    /**
     * {@inheritDoc}
     */
    public function setEndtime($endtime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEndtime', [$endtime]);

        return parent::setEndtime($endtime);
    }

    /**
     * {@inheritDoc}
     */
    public function setUnfreezetime($unfreezetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUnfreezetime', [$unfreezetime]);

        return parent::setUnfreezetime($unfreezetime);
    }

    /**
     * {@inheritDoc}
     */
    public function setDeactivatetime($deactivatetime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeactivatetime', [$deactivatetime]);

        return parent::setDeactivatetime($deactivatetime);
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setProcessBalloons($processBalloons)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setProcessBalloons', [$processBalloons]);

        return parent::setProcessBalloons($processBalloons);
    }

    /**
     * {@inheritDoc}
     */
    public function getProcessBalloons()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProcessBalloons', []);

        return parent::getProcessBalloons();
    }

    /**
     * {@inheritDoc}
     */
    public function setPublic($public)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPublic', [$public]);

        return parent::setPublic($public);
    }

    /**
     * {@inheritDoc}
     */
    public function getPublic()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPublic', []);

        return parent::getPublic();
    }

    /**
     * {@inheritDoc}
     */
    public function setOpenToAllTeams($openToAllTeams)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOpenToAllTeams', [$openToAllTeams]);

        return parent::setOpenToAllTeams($openToAllTeams);
    }

    /**
     * {@inheritDoc}
     */
    public function isOpenToAllTeams()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isOpenToAllTeams', []);

        return parent::isOpenToAllTeams();
    }

    /**
     * {@inheritDoc}
     */
    public function addTeam(\App\Entity\Team $team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeam', [$team]);

        return parent::addTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTeam(\App\Entity\Team $team)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTeam', [$team]);

        return parent::removeTeam($team);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeams()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeams', []);

        return parent::getTeams();
    }

    /**
     * {@inheritDoc}
     */
    public function addProblem(\App\Entity\ContestProblem $problem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProblem', [$problem]);

        return parent::addProblem($problem);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProblem(\App\Entity\ContestProblem $problem)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProblem', [$problem]);

        return parent::removeProblem($problem);
    }

    /**
     * {@inheritDoc}
     */
    public function getProblems()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProblems', []);

        return parent::getProblems();
    }

    /**
     * {@inheritDoc}
     */
    public function addClarification(\App\Entity\Clarification $clarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addClarification', [$clarification]);

        return parent::addClarification($clarification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeClarification(\App\Entity\Clarification $clarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeClarification', [$clarification]);

        return parent::removeClarification($clarification);
    }

    /**
     * {@inheritDoc}
     */
    public function getClarifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClarifications', []);

        return parent::getClarifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubmission(\App\Entity\Submission $submission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubmission', [$submission]);

        return parent::addSubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubmission(\App\Entity\Submission $submission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubmission', [$submission]);

        return parent::removeSubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmissions', []);

        return parent::getSubmissions();
    }

    /**
     * {@inheritDoc}
     */
    public function addInternalError(\App\Entity\InternalError $internalError)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addInternalError', [$internalError]);

        return parent::addInternalError($internalError);
    }

    /**
     * {@inheritDoc}
     */
    public function removeInternalError(\App\Entity\InternalError $internalError)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeInternalError', [$internalError]);

        return parent::removeInternalError($internalError);
    }

    /**
     * {@inheritDoc}
     */
    public function getInternalErrors()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInternalErrors', []);

        return parent::getInternalErrors();
    }

    /**
     * {@inheritDoc}
     */
    public function getDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDuration', []);

        return parent::getDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function getScoreboardFreezeDuration()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScoreboardFreezeDuration', []);

        return parent::getScoreboardFreezeDuration();
    }

    /**
     * {@inheritDoc}
     */
    public function isActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isActive', []);

        return parent::isActive();
    }

    /**
     * {@inheritDoc}
     */
    public function getAbsoluteTime($time_string)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAbsoluteTime', [$time_string]);

        return parent::getAbsoluteTime($time_string);
    }

    /**
     * {@inheritDoc}
     */
    public function addRemovedInterval(\App\Entity\RemovedInterval $removedInterval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRemovedInterval', [$removedInterval]);

        return parent::addRemovedInterval($removedInterval);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRemovedInterval(\App\Entity\RemovedInterval $removedInterval)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRemovedInterval', [$removedInterval]);

        return parent::removeRemovedInterval($removedInterval);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemovedIntervals()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemovedIntervals', []);

        return parent::getRemovedIntervals();
    }

    /**
     * {@inheritDoc}
     */
    public function getContestTime(float $wallTime): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContestTime', [$wallTime]);

        return parent::getContestTime($wallTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getJuryTimeData(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJuryTimeData', []);

        return parent::getJuryTimeData();
    }

    /**
     * {@inheritDoc}
     */
    public function getState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getState', []);

        return parent::getState();
    }

    /**
     * {@inheritDoc}
     */
    public function getMinutesRemaining(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMinutesRemaining', []);

        return parent::getMinutesRemaining();
    }

    /**
     * {@inheritDoc}
     */
    public function getFreezeData()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFreezeData', []);

        return parent::getFreezeData();
    }

    /**
     * {@inheritDoc}
     */
    public function updateTimes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'updateTimes', []);

        return parent::updateTimes();
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context]);

        return parent::validate($context);
    }

    /**
     * {@inheritDoc}
     */
    public function isTimeInContest(float $time): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isTimeInContest', [$time]);

        return parent::isTimeInContest($time);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountdown(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountdown', []);

        return parent::getCountdown();
    }

    /**
     * {@inheritDoc}
     */
    public function getOpenToAllTeams(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOpenToAllTeams', []);

        return parent::getOpenToAllTeams();
    }

    /**
     * {@inheritDoc}
     */
    public function getTeamCategories(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeamCategories', []);

        return parent::getTeamCategories();
    }

    /**
     * {@inheritDoc}
     */
    public function addTeamCategory(\App\Entity\TeamCategory $teamCategory): \App\Entity\Contest
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addTeamCategory', [$teamCategory]);

        return parent::addTeamCategory($teamCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function removeTeamCategory(\App\Entity\TeamCategory $teamCategory): \App\Entity\Contest
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeTeamCategory', [$teamCategory]);

        return parent::removeTeamCategory($teamCategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiIdField(\App\Service\EventLogService $eventLogService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiIdField', [$eventLogService]);

        return parent::getApiIdField($eventLogService);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiId(\App\Service\EventLogService $eventLogService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiId', [$eventLogService]);

        return parent::getApiId($eventLogService);
    }

}
