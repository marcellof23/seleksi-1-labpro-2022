<?php

namespace Proxies\__CG__\App\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Team extends \App\Entity\Team implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'teamid', 'icpcid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'display_name', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'categoryid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'affilid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'members', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'room', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'judging_last_started', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'penalty', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'addUserForTeam', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'affiliation', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'contests', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'users', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'submissions', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'sent_clarifications', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'received_clarifications', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'unread_clarifications'];
        }

        return ['__isInitialized__', 'teamid', 'icpcid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'name', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'display_name', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'categoryid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'affilid', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'enabled', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'members', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'room', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'comments', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'judging_last_started', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'penalty', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'addUserForTeam', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'affiliation', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'category', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'contests', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'users', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'submissions', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'sent_clarifications', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'received_clarifications', '' . "\0" . 'App\\Entity\\Team' . "\0" . 'unread_clarifications'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Team $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setTeamid($teamid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTeamid', [$teamid]);

        return parent::setTeamid($teamid);
    }

    /**
     * {@inheritDoc}
     */
    public function getTeamid()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getTeamid();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTeamid', []);

        return parent::getTeamid();
    }

    /**
     * {@inheritDoc}
     */
    public function setIcpcid($icpcid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIcpcid', [$icpcid]);

        return parent::setIcpcid($icpcid);
    }

    /**
     * {@inheritDoc}
     */
    public function getIcpcid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIcpcid', []);

        return parent::getIcpcid();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setDisplayName(?string $display_name): \App\Entity\Team
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDisplayName', [$display_name]);

        return parent::setDisplayName($display_name);
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function getEffectiveName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEffectiveName', []);

        return parent::getEffectiveName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategoryid($categoryid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategoryid', [$categoryid]);

        return parent::setCategoryid($categoryid);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategoryid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategoryid', []);

        return parent::getCategoryid();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffilid($affilid)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffilid', [$affilid]);

        return parent::setAffilid($affilid);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffilid()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffilid', []);

        return parent::getAffilid();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnabled($enabled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnabled', [$enabled]);

        return parent::setEnabled($enabled);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnabled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnabled', []);

        return parent::getEnabled();
    }

    /**
     * {@inheritDoc}
     */
    public function setMembers($members)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMembers', [$members]);

        return parent::setMembers($members);
    }

    /**
     * {@inheritDoc}
     */
    public function getMembers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMembers', []);

        return parent::getMembers();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoom($room)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoom', [$room]);

        return parent::setRoom($room);
    }

    /**
     * {@inheritDoc}
     */
    public function getRoom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoom', []);

        return parent::getRoom();
    }

    /**
     * {@inheritDoc}
     */
    public function setComments($comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComments', [$comments]);

        return parent::setComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', []);

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setJudgingLastStarted($judgingLastStarted)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJudgingLastStarted', [$judgingLastStarted]);

        return parent::setJudgingLastStarted($judgingLastStarted);
    }

    /**
     * {@inheritDoc}
     */
    public function getJudgingLastStarted()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJudgingLastStarted', []);

        return parent::getJudgingLastStarted();
    }

    /**
     * {@inheritDoc}
     */
    public function setPenalty($penalty)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPenalty', [$penalty]);

        return parent::setPenalty($penalty);
    }

    /**
     * {@inheritDoc}
     */
    public function setAddUserForTeam(bool $addUserForTeam)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddUserForTeam', [$addUserForTeam]);

        return parent::setAddUserForTeam($addUserForTeam);
    }

    /**
     * {@inheritDoc}
     */
    public function getPenalty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPenalty', []);

        return parent::getPenalty();
    }

    /**
     * {@inheritDoc}
     */
    public function getAddUserForTeam(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddUserForTeam', []);

        return parent::getAddUserForTeam();
    }

    /**
     * {@inheritDoc}
     */
    public function setAffiliation(\App\Entity\TeamAffiliation $affiliation = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAffiliation', [$affiliation]);

        return parent::setAffiliation($affiliation);
    }

    /**
     * {@inheritDoc}
     */
    public function getAffiliation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffiliation', []);

        return parent::getAffiliation();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory(\App\Entity\TeamCategory $category = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function addContest(\App\Entity\Contest $contest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addContest', [$contest]);

        return parent::addContest($contest);
    }

    /**
     * {@inheritDoc}
     */
    public function removeContest(\App\Entity\Contest $contest)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeContest', [$contest]);

        return parent::removeContest($contest);
    }

    /**
     * {@inheritDoc}
     */
    public function getContests()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContests', []);

        return parent::getContests();
    }

    /**
     * {@inheritDoc}
     */
    public function addUser(\App\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUser', [$user]);

        return parent::addUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUser(\App\Entity\User $user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUser', [$user]);

        return parent::removeUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUsers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsers', []);

        return parent::getUsers();
    }

    /**
     * {@inheritDoc}
     */
    public function addSubmission(\App\Entity\Submission $submission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSubmission', [$submission]);

        return parent::addSubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSubmission(\App\Entity\Submission $submission)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSubmission', [$submission]);

        return parent::removeSubmission($submission);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubmissions()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubmissions', []);

        return parent::getSubmissions();
    }

    /**
     * {@inheritDoc}
     */
    public function addSentClarification(\App\Entity\Clarification $sentClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSentClarification', [$sentClarification]);

        return parent::addSentClarification($sentClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSentClarification(\App\Entity\Clarification $sentClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSentClarification', [$sentClarification]);

        return parent::removeSentClarification($sentClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function getSentClarifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSentClarifications', []);

        return parent::getSentClarifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addReceivedClarification(\App\Entity\Clarification $receivedClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReceivedClarification', [$receivedClarification]);

        return parent::addReceivedClarification($receivedClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReceivedClarification(\App\Entity\Clarification $receivedClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReceivedClarification', [$receivedClarification]);

        return parent::removeReceivedClarification($receivedClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function getReceivedClarifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReceivedClarifications', []);

        return parent::getReceivedClarifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addUnreadClarification(\App\Entity\Clarification $unreadClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addUnreadClarification', [$unreadClarification]);

        return parent::addUnreadClarification($unreadClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeUnreadClarification(\App\Entity\Clarification $unreadClarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeUnreadClarification', [$unreadClarification]);

        return parent::removeUnreadClarification($unreadClarification);
    }

    /**
     * {@inheritDoc}
     */
    public function getUnreadClarifications()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUnreadClarifications', []);

        return parent::getUnreadClarifications();
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupIds(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupIds', []);

        return parent::getGroupIds();
    }

    /**
     * {@inheritDoc}
     */
    public function getAffiliationName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAffiliationName', []);

        return parent::getAffiliationName();
    }

    /**
     * {@inheritDoc}
     */
    public function getNationality()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNationality', []);

        return parent::getNationality();
    }

    /**
     * {@inheritDoc}
     */
    public function canViewClarification(\App\Entity\Clarification $clarification)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'canViewClarification', [$clarification]);

        return parent::canViewClarification($clarification);
    }

    /**
     * {@inheritDoc}
     */
    public function getExternalRelationships(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExternalRelationships', []);

        return parent::getExternalRelationships();
    }

    /**
     * {@inheritDoc}
     */
    public function validate(\Symfony\Component\Validator\Context\ExecutionContextInterface $context)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'validate', [$context]);

        return parent::validate($context);
    }

    /**
     * {@inheritDoc}
     */
    public function inContest(\App\Entity\Contest $contest): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'inContest', [$contest]);

        return parent::inContest($contest);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiIdField(\App\Service\EventLogService $eventLogService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiIdField', [$eventLogService]);

        return parent::getApiIdField($eventLogService);
    }

    /**
     * {@inheritDoc}
     */
    public function getApiId(\App\Service\EventLogService $eventLogService)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getApiId', [$eventLogService]);

        return parent::getApiId($eventLogService);
    }

}
